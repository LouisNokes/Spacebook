{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ViewPost = function (_Component) {\n  _inherits(ViewPost, _Component);\n\n  var _super = _createSuper(ViewPost);\n\n  function ViewPost(props) {\n    var _this;\n\n    _classCallCheck(this, ViewPost);\n\n    _this = _super.call(this, props);\n\n    _this.getPost = function _callee() {\n      var value, id, postId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              value = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              id = _context.sent;\n              postId = _this.state.post_Id;\n              return _context.abrupt(\"return\", fetch('http://localhost:3333/api/1.0.0/user/' + id + '/post/' + postId, {\n                headers: {\n                  'X-Authorization': value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.setState({\n                    post_Id: postId\n                  });\n\n                  return response.json();\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate('Login');\n                } else if (response.status === 403) {\n                  _this.setState({\n                    errorMsg: 'You can only view the posts of your friends!'\n                  });\n                } else if (response.status === 404) {\n                  _this.setState({\n                    errorMsg: 'Posts not found?!'\n                  });\n                } else if (response.status === 500) {\n                  _this.setState({\n                    errorMsg: 'Server Error! Please relaod or try again later!'\n                  });\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  isLoading: false,\n                  text: responseJson.text,\n                  first_Name: responseJson.author.first_name,\n                  last_name: responseJson.author.last_name\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      listData: '',\n      first_Name: '',\n      last_name: '',\n      post_Id: _this.props.route.params.postID\n    };\n    return _this;\n  }\n\n  _createClass(ViewPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPost();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var listData = this.state.listData;\n      return _jsx(ScrollView, {\n        style: styles.backgrd,\n        children: _jsx(Text, {\n          children: this.state.text\n        })\n      });\n    }\n  }]);\n\n  return ViewPost;\n}(Component);\n\nvar styles = StyleSheet.create({\n  profileImg: {\n    width: 100,\n    height: 100,\n    borderRadius: 80,\n    borderColor: 'black',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 20\n  },\n  txt: {\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2\n  },\n  txtName: {\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 20\n  },\n  editbtn: {\n    alignItems: 'center',\n    backgroundColor: '#8b9dc3',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 2\n  },\n  backgrd: {\n    backgroundColor: '#3b5998'\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 300\n  },\n  profileImgCont: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30\n  },\n  position: {\n    bottom: 200\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15\n  }\n});\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/viewSinglePost.js"],"names":["AsyncStorage","React","Component","ViewPost","props","getPost","getItem","value","id","postId","state","post_Id","fetch","headers","then","response","status","setState","json","navigation","navigate","errorMsg","responseJson","isLoading","text","first_Name","author","first_name","last_name","catch","error","console","log","listData","route","params","postID","styles","backgrd","StyleSheet","create","profileImg","width","height","borderRadius","borderColor","borderWidth","justifyContent","alignItems","margin","txt","fontWeight","color","txtName","fontSize","editbtn","backgroundColor","padding","buttonContainer","flexDirection","postContainer","flex","marginTop","rightButtons","marginLeft","profileImgCont","resizeMode","alignSelf","position","bottom","nameTxt","textAlign","textDecorationLine","button","elevation","textStyle","contentSection","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable react/no-unused-state */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport { Text, View, Image, StyleSheet, FlatList } from 'react-native';\r\nimport { ScrollView } from 'react-native-web';\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      listData: '',\r\n      first_Name: '',\r\n      last_name: '',\r\n      post_Id: this.props.route.params.postID,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPost();\r\n  }\r\n\r\n  getPost = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n    const id = await AsyncStorage.getItem('@user_id');\r\n    const postId = this.state.post_Id;\r\n\r\n    return fetch(\r\n      'http://localhost:3333/api/1.0.0/user/' + id + '/post/' + postId,\r\n      {\r\n        headers: {\r\n          'X-Authorization': value,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({ post_Id: postId });\r\n          return response.json();\r\n        } else if (response.status === 401) {\r\n          this.props.navigation.navigate('Login');\r\n        } else if (response.status === 403) {\r\n          this.setState({\r\n            errorMsg: 'You can only view the posts of your friends!',\r\n          });\r\n        } else if (response.status === 404) {\r\n          this.setState({ errorMsg: 'Posts not found?!' });\r\n        } else if (response.status === 500) {\r\n          this.setState({\r\n            errorMsg: 'Server Error! Please relaod or try again later!',\r\n          });\r\n        } else {\r\n          throw 'Something went wrong';\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          isLoading: false,\r\n\r\n          text: responseJson.text,\r\n          first_Name: responseJson.author.first_name,\r\n          last_name: responseJson.author.last_name,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    const { listData } = this.state;\r\n    return (\r\n      <ScrollView style={styles.backgrd}>\r\n        <Text>{this.state.text}</Text>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  profileImg: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 80,\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: 20,\r\n  },\r\n  txt: {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    margin: 2,\r\n  },\r\n  txtName: {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    fontSize: 20,\r\n  },\r\n  editbtn: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#8b9dc3',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    margin: 5,\r\n    borderWidth: 2,\r\n  },\r\n  backgrd: {\r\n    backgroundColor: '#3b5998',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  postContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    height: 300,\r\n    width: 400,\r\n    marginTop: 30,\r\n    borderWidth: 2,\r\n  },\r\n  rightButtons: {\r\n    flexDirection: 'row',\r\n    marginLeft: 300,\r\n  },\r\n  profileImgCont: {\r\n    resizeMode: 'contain',\r\n    alignSelf: 'center',\r\n    height: 30,\r\n    width: 30,\r\n  },\r\n  position: {\r\n    bottom: 200,\r\n  },\r\n  nameTxt: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n    margin: 5,\r\n    width: 170,\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  contentSection: {\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}