{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card } from \"react-native-web/dist/index\";\nimport { useScrollToTop } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddFriend = function (_Component) {\n  _inherits(AddFriend, _Component);\n\n  var _super = _createSuper(AddFriend);\n\n  function AddFriend(props) {\n    var _this;\n\n    _classCallCheck(this, AddFriend);\n\n    _this = _super.call(this, props);\n\n    _this.getData = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.userInput !== '')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              value = _context.sent;\n              return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/search?q=\" + _this.state.userInput, {\n                headers: {\n                  'X-Authorization': value\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  _this.props.navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 7:\n              _this.setState({\n                validationText: 'You have not entered Text in the text box'\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkLoggedIn = function _callee2() {\n      var value;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              value = _context2.sent;\n\n              if (value == null) {\n                _this.props.navigation.navigate('login');\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userInput: '',\n      friendSearch: false,\n      listData: [],\n      selectedUserID: 0,\n      validationText: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddFriend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe = this.props.navigation.addListener('focus', function () {\n        _this2.checkLoggedIn();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(View, {\n        children: _jsxs(ScrollView, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Search...\",\n            onChangeText: function onChangeText(userInput) {\n              return _this3.setState({\n                userInput: userInput\n              });\n            },\n            value: this.state.userInput\n          }), _jsx(Button, {\n            title: \"Search:\",\n            onPress: function onPress() {\n              return _this3.getData();\n            }\n          }), _jsx(Text, {\n            children: this.state.validationText\n          }), _jsx(FlatList, {\n            data: this.state.listData,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsx(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: _jsxs(Text, {\n                  children: [item.user_givenname, \" \", item.user_familyname]\n                })\n              });\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return AddFriend;\n}(Component);\n\nexport default AddFriend;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/addFriend.js"],"names":["React","Component","AsyncStorage","Card","useScrollToTop","AddFriend","props","getData","state","userInput","getItem","value","fetch","headers","then","response","status","json","console","log","navigation","navigate","responseJson","setState","listData","catch","error","validationText","checkLoggedIn","friendSearch","selectedUserID","unsubscribe","addListener","item","flexDirection","user_givenname","user_familyname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {\r\n  ScrollView,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  FlatList,\r\n  View,\r\n  Card,\r\n} from 'react-native-web';\r\nimport { useScrollToTop } from '@react-navigation/native';\r\n\r\nclass AddFriend extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInput: '',\r\n      friendSearch: false,\r\n      listData: [],\r\n      selectedUserID: 0,\r\n      validationText: '',\r\n    };\r\n  }\r\n  //Having issues with the userInput but I can't properly think why\r\n  //Look at this in depth tomorrow\r\n  componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener('focus', () => {\r\n      this.checkLoggedIn();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  getData = async () => {\r\n    if (this.state.userInput !== '') {\r\n      const value = await AsyncStorage.getItem('@session_token');\r\n      return fetch(\r\n        `http://localhost:3333/api/1.0.0/search?q=${this.state.userInput}`,\r\n        {\r\n          headers: {\r\n            'X-Authorization': value,\r\n          },\r\n        }\r\n      )\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            return response.json();\r\n          } else if (response.status === 400) {\r\n            console.log('Bad Request');\r\n          } else if (response.status === 401) {\r\n            this.props.navigation.navigate('login');\r\n          } else {\r\n            throw 'Something went wrong';\r\n          }\r\n        })\r\n        .then((responseJson) => {\r\n          this.setState({\r\n            listData: responseJson,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      this.setState({\r\n        validationText: 'You have not entered Text in the text box',\r\n      });\r\n    }\r\n  };\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n    if (value == null) {\r\n      this.props.navigation.navigate('login');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <ScrollView>\r\n          <TextInput\r\n            placeholder=\"Search...\"\r\n            onChangeText={(userInput) => this.setState({ userInput })}\r\n            value={this.state.userInput}\r\n          />\r\n          <Button title=\"Search:\" onPress={() => this.getData()} />\r\n          <Text>{this.state.validationText}</Text>\r\n          <FlatList\r\n            data={this.state.listData}\r\n            renderItem={({ item }) => (\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <Text>\r\n                  {item.user_givenname} {item.user_familyname}\r\n                </Text>\r\n              </View>\r\n            )}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFriend;\r\n"]},"metadata":{},"sourceType":"module"}