{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signup = function (_Component) {\n  _inherits(Signup, _Component);\n\n  var _super = _createSuper(Signup);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _super.call(this, props);\n\n    _this.signup = function _callee() {\n      var userData, response, responseJson;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userData = {\n                first_name: _this.state.first_name,\n                last_name: _this.state.last_name,\n                email: _this.state.email,\n                password: _this.state.password\n              };\n\n              if (!(_this.state.first_name === '' || _this.state.last_name === '' || _this.state.email === '' || _this.state.password === '')) {\n                _context.next = 5;\n                break;\n              }\n\n              ToastAndroid.show('Please fill in all fields', ToastAndroid.SHORT);\n              _context.next = 34;\n              break;\n\n            case 5:\n              if (!(_this.state.password.length < 5)) {\n                _context.next = 9;\n                break;\n              }\n\n              ToastAndroid.show('Password is too short', ToastAndroid.SHORT);\n              _context.next = 34;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(fetch('http://10.0.2.2:3333/api/1.0.0/user', {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userData)\n              }));\n\n            case 12:\n              response = _context.sent;\n\n              if (!(response.status === 201)) {\n                _context.next = 17;\n                break;\n              }\n\n              ToastAndroid.show('Account created successfully', ToastAndroid.SHORT);\n              _context.next = 26;\n              break;\n\n            case 17:\n              if (!(response.status === 400)) {\n                _context.next = 21;\n                break;\n              }\n\n              throw 'Failed validation';\n\n            case 21:\n              if (!(response.status === 500)) {\n                _context.next = 25;\n                break;\n              }\n\n              throw 'Server error';\n\n            case 25:\n              throw 'Something went wrong';\n\n            case 26:\n              responseJson = undefined;\n              console.log('User created with ID: ', responseJson);\n\n              _this.props.navigation.navigate('login');\n\n              _context.next = 34;\n              break;\n\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](9);\n              console.log(_context.t0);\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[9, 31]], Promise);\n    };\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(ScrollView, {\n        children: [_jsx(TextInput, {\n          placeholder: \"First Name\",\n          onChangeText: function onChangeText(first_name) {\n            return _this2.setState({\n              first_name: first_name\n            });\n          },\n          value: this.state.first_name,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Last Name\",\n          onChangeText: function onChangeText(last_name) {\n            return _this2.setState({\n              last_name: last_name\n            });\n          },\n          value: this.state.last_name,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Email\",\n          onChangeText: function onChangeText(email) {\n            return _this2.setState({\n              email: email\n            });\n          },\n          value: this.state.email,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(password) {\n            return _this2.setState({\n              password: password\n            });\n          },\n          value: this.state.password,\n          style: styles.input\n        }), _jsx(TouchableOpacity, {\n          style: styles.signupBtn,\n          onPress: function onPress() {\n            _this2.signup();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'black'\n            },\n            children: \"SIGN UP\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    margin: 5\n  },\n  signupBtn: {\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: '#7649fe',\n    margin: 5,\n    borderWidth: 2\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/SignupScreen.js"],"names":["React","Component","Signup","props","signup","userData","first_name","state","last_name","email","password","ToastAndroid","show","SHORT","length","fetch","method","headers","body","JSON","stringify","response","status","responseJson","undefined","console","log","navigation","navigate","setState","styles","input","signupBtn","color","StyleSheet","create","height","margin","borderWidth","padding","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TextInput,\r\n  ToastAndroid,\r\n} from 'react-native';\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  signup = async () => {\r\n    let userData = {\r\n      first_name: this.state.first_name,\r\n      last_name: this.state.last_name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    if (\r\n      this.state.first_name === '' ||\r\n      this.state.last_name === '' ||\r\n      this.state.email === '' ||\r\n      this.state.password === ''\r\n    ) {\r\n      ToastAndroid.show('Please fill in all fields', ToastAndroid.SHORT);\r\n    } else if (this.state.password.length < 5) {\r\n      ToastAndroid.show('Password is too short', ToastAndroid.SHORT);\r\n    } else {\r\n      try {\r\n        const response = await fetch('http://10.0.2.2:3333/api/1.0.0/user', {\r\n          method: 'post',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(userData),\r\n        });\r\n        if (response.status === 201) {\r\n          ToastAndroid.show('Account created successfully', ToastAndroid.SHORT);\r\n        } else if (response.status === 400) {\r\n          throw 'Failed validation';\r\n        } else if (response.status === 500) {\r\n          throw 'Server error';\r\n        } else {\r\n          throw 'Something went wrong';\r\n        }\r\n        const responseJson = undefined;\r\n        console.log('User created with ID: ', responseJson);\r\n        this.props.navigation.navigate('login');\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ScrollView>\r\n        <TextInput\r\n          placeholder=\"First Name\"\r\n          onChangeText={(first_name) => this.setState({ first_name })}\r\n          value={this.state.first_name}\r\n          style={styles.input}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Last Name\"\r\n          onChangeText={(last_name) => this.setState({ last_name })}\r\n          value={this.state.last_name}\r\n          style={styles.input}\r\n        />\r\n\r\n        <TextInput\r\n          placeholder=\"Email\"\r\n          onChangeText={(email) => this.setState({ email })}\r\n          value={this.state.email}\r\n          style={styles.input}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Password\"\r\n          onChangeText={(password) => this.setState({ password })}\r\n          value={this.state.password}\r\n          style={styles.input}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.signupBtn}\r\n          onPress={() => {\r\n            this.signup();\r\n          }}\r\n        >\r\n          <Text style={{ color: 'black' }}>SIGN UP</Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    margin: 5,\r\n  },\r\n  signupBtn: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    backgroundColor: '#7649fe',\r\n    margin: 5,\r\n    borderWidth: 2,\r\n  },\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}