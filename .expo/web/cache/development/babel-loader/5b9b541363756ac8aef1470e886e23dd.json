{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport homeScreen from \"./HomeScreen\";\nimport profileScreen from \"./ProfileScreen\";\nimport messageScreen from \"./MessageScreen\";\nimport friendListScreen from \"./FriendsList\";\nimport settingScreen from \"./SettingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigation();\n\nvar tabNav = function (_Component) {\n  _inherits(tabNav, _Component);\n\n  var _super = _createSuper(tabNav);\n\n  function tabNav() {\n    _classCallCheck(this, tabNav);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(tabNav, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                    color = _ref2.color,\n                    size = _ref2.size;\n                var iconName;\n\n                if (route.name === 'homeScreen') {\n                  iconName = focused ? 'HomeScreen' : 'HomeScreen-outline';\n                } else if (route.name === 'profileScreen') {\n                  iconName = focused ? 'ProfileScreen' : 'ProfileScreen-outline';\n                } else if (route.name === 'settingScreen') {\n                  iconName = focused ? 'SettingScreen' : 'SettingScreen-outline';\n                }\n\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              }\n            };\n          },\n          tabBarOptions: {\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray'\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Home\",\n            component: homeScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Profile\",\n            component: profileScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: settingScreen\n          })]\n        })\n      });\n    }\n  }]);\n\n  return tabNav;\n}(Component);\n\nexport default tabNav;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/tabNav.js"],"names":["React","Component","NavigationContainer","createBottomTabNavigator","Ionicons","homeScreen","profileScreen","messageScreen","friendListScreen","settingScreen","Tab","createBottomTabNavigation","tabNav","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,OAAOC,QAAP;AAEA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;;;AAEA,IAAMC,GAAG,GAAGC,yBAAyB,EAArC;;IAEMC,M;;;;;;;;;;;;;WACJ,kBAAS;AACP,aACE,KAAC,mBAAD;AAAA,kBACE,MAAC,GAAD,CAAK,SAAL;AACE,UAAA,aAAa,EAAE;AAAA,gBAAGC,KAAH,QAAGA,KAAH;AAAA,mBAAgB;AAC7BC,cAAAA,UAAU,EAAE,2BAA8B;AAAA,oBAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,oBAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,oBAAXC,IAAW,SAAXA,IAAW;AACxC,oBAAIC,QAAJ;;AAEA,oBAAIL,KAAK,CAACM,IAAN,KAAe,YAAnB,EAAiC;AAC/BD,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,YAAH,GAAkB,oBAApC;AACD,iBAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,eAAnB,EAAoC;AACzCD,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACD,iBAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,eAAnB,EAAoC;AACzCD,kBAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACD;;AACD,uBAAO,KAAC,QAAD;AAAU,kBAAA,IAAI,EAAEG,QAAhB;AAA0B,kBAAA,IAAI,EAAED,IAAhC;AAAsC,kBAAA,KAAK,EAAED;AAA7C,kBAAP;AACD;AAZ4B,aAAhB;AAAA,WADjB;AAeE,UAAA,aAAa,EAAE;AACbI,YAAAA,eAAe,EAAE,QADJ;AAEbC,YAAAA,iBAAiB,EAAE;AAFN,WAfjB;AAAA,qBAoBE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,MAAjB;AAAwB,YAAA,SAAS,EAAEhB;AAAnC,YApBF,EAqBE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,SAAjB;AAA2B,YAAA,SAAS,EAAEC;AAAtC,YArBF,EAsBE,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAC,UAAjB;AAA4B,YAAA,SAAS,EAAEG;AAAvC,YAtBF;AAAA;AADF,QADF;AA4BD;;;;EA9BkBR,S;;AAiCrB,eAAeW,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport homeScreen from './HomeScreen';\nimport profileScreen from './ProfileScreen';\nimport messageScreen from './MessageScreen';\nimport friendListScreen from './FriendsList';\nimport settingScreen from './SettingScreen';\n\nconst Tab = createBottomTabNavigation();\n\nclass tabNav extends Component {\n  render() {\n    return (\n      <NavigationContainer>\n        <Tab.Navigator\n          screenOptions={({ route }) => ({\n            tabBarIcon: ({ focused, color, size }) => {\n              let iconName;\n\n              if (route.name === 'homeScreen') {\n                iconName = focused ? 'HomeScreen' : 'HomeScreen-outline';\n              } else if (route.name === 'profileScreen') {\n                iconName = focused ? 'ProfileScreen' : 'ProfileScreen-outline';\n              } else if (route.name === 'settingScreen') {\n                iconName = focused ? 'SettingScreen' : 'SettingScreen-outline';\n              }\n              return <Ionicons name={iconName} size={size} color={color} />;\n            },\n          })}\n          tabBarOptions={{\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray',\n          }}\n        >\n          <Tab.Screen name=\"Home\" component={homeScreen} />\n          <Tab.Screen name=\"Profile\" component={profileScreen} />\n          <Tab.Screen name=\"Settings\" component={settingScreen} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n\nexport default tabNav;\n"]},"metadata":{},"sourceType":"module"}