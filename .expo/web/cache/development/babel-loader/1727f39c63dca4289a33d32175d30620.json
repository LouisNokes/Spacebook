{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport login from \"./screens/loginScreen\";\nimport signup from \"./screens/signupScreen\";\nimport homescreen from \"./screens/homeScreen\";\nimport profileScreen from \"./screens/profileScreen\";\nimport settingscreen from \"./screens/settingScreen\";\nimport FriendsList from \"./screens/friendsList\";\nimport EditProfile from \"./screens/editProfile\";\nimport addFriend from \"./screens/addFriend\";\nimport FriendRequest from \"./screens/friendRequestScreen\";\nimport SinglePost from \"./screens/singlePost\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: homescreen,\n      options: {\n        headerShown: true,\n        headerTitle: function headerTitle() {\n          return _jsx(Image, {\n            style: {\n              width: 200,\n              height: 60\n            },\n            source: require(\"./assets/logo.png\")\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return _jsxs(View, {\n            children: [_jsx(Image, {\n              source: require(\"./assets/home.png\"),\n              resizeMode: \"contain\",\n              style: styles.image\n            }), _jsx(Text, {\n              style: {\n                color: focused ? '#660094' : '#748c94',\n                fontSize: 10\n              },\n              children: \"Home\"\n            })]\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: profileScreen,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsxs(View, {\n            children: [_jsx(Image, {\n              source: require(\"./assets/user.png\"),\n              resizeMode: \"contain\",\n              style: styles.image\n            }), _jsx(Text, {\n              style: {\n                color: focused ? '#660094' : '#748c94',\n                fontSize: 10\n              },\n              children: \"Profile\"\n            })]\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Friends\",\n      component: FriendsList,\n      options: {\n        title: 'Friends',\n        headerTitleAlign: 'center',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsxs(View, {\n            children: [_jsx(Image, {\n              source: require(\"./assets/friends.png\"),\n              resizeMode: \"contain\",\n              style: styles.image\n            }), _jsx(Text, {\n              style: {\n                color: focused ? '#660094' : '#748c94',\n                fontSize: 10\n              },\n              children: \"Friends\"\n            })]\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: settingscreen,\n      options: {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsxs(View, {\n            children: [_jsx(Image, {\n              source: require(\"./assets/settings.png\"),\n              resizeMode: \"contain\",\n              style: styles.image\n            }), _jsx(Text, {\n              style: {\n                color: focused ? '#660094' : '#748c94',\n                fontSize: 10\n              },\n              children: \"Settings\"\n            })]\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"login\",\n        component: login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"signup\",\n        component: signup,\n        options: {\n          title: 'Sign up',\n          headerTitleAlign: 'center'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"edit\",\n        component: EditProfile,\n        options: {\n          title: 'Edit',\n          headerTitleAlign: 'center'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"add\",\n        component: addFriend,\n        options: {\n          title: 'Add Friend',\n          headerTitleAlign: 'center'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"request\",\n        component: FriendRequest,\n        options: {\n          title: 'Friend Request',\n          headerTitleAlign: 'center'\n        }\n      })]\n    })\n  });\n}\n\nexport default MyStack;\nvar styles = StyleSheet.create({\n  image: {\n    width: 25,\n    height: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","login","signup","homescreen","profileScreen","settingscreen","FriendsList","EditProfile","addFriend","FriendRequest","SinglePost","Stack","Tab","Home","showLabel","headerShown","headerTitle","width","height","require","tabBarIcon","focused","styles","image","color","fontSize","title","headerTitleAlign","MyStack","StyleSheet","create"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Text, View, Image, StyleSheet } from 'react-native';\n\nimport login from './screens/loginScreen';\nimport signup from './screens/signupScreen';\nimport homescreen from './screens/homeScreen';\nimport profileScreen from './screens/profileScreen';\nimport settingscreen from './screens/settingScreen';\nimport FriendsList from './screens/friendsList';\nimport EditProfile from './screens/editProfile';\nimport addFriend from './screens/addFriend';\nimport FriendRequest from './screens/friendRequestScreen';\nimport SinglePost from './screens/singlePost';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction Home() {\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        showLabel: false,\n      }}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={homescreen}\n        options={{\n          headerShown: true,\n\n          headerTitle: () => (\n            <Image\n              style={{\n                width: 200,\n                height: 60,\n              }}\n              source={require('./assets/logo.png')}\n            />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <View>\n              <Image\n                source={require('./assets/home.png')}\n                resizeMode=\"contain\"\n                style={styles.image}\n              />\n              <Text\n                style={{ color: focused ? '#660094' : '#748c94', fontSize: 10 }}\n              >\n                Home\n              </Text>\n            </View>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={profileScreen}\n        options={{\n          headerShown: false,\n          tabBarIcon: ({ focused }) => (\n            <View>\n              <Image\n                source={require('./assets/user.png')}\n                resizeMode=\"contain\"\n                style={styles.image}\n              />\n              <Text\n                style={{ color: focused ? '#660094' : '#748c94', fontSize: 10 }}\n              >\n                Profile\n              </Text>\n            </View>\n          ),\n        }}\n      />\n\n      <Tab.Screen\n        name=\"Friends\"\n        component={FriendsList}\n        options={{\n          title: 'Friends',\n          headerTitleAlign: 'center',\n          tabBarIcon: ({ focused }) => (\n            <View>\n              <Image\n                source={require('./assets/friends.png')}\n                resizeMode=\"contain\"\n                style={styles.image}\n              />\n              <Text\n                style={{ color: focused ? '#660094' : '#748c94', fontSize: 10 }}\n              >\n                Friends\n              </Text>\n            </View>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={settingscreen}\n        options={{\n          headerShown: false,\n          tabBarIcon: ({ focused }) => (\n            <View>\n              <Image\n                source={require('./assets/settings.png')}\n                resizeMode=\"contain\"\n                style={styles.image}\n              />\n              <Text\n                style={{ color: focused ? '#660094' : '#748c94', fontSize: 10 }}\n              >\n                Settings\n              </Text>\n            </View>\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nfunction MyStack() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"login\"\n          component={login}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"signup\"\n          component={signup}\n          options={{ title: 'Sign up', headerTitleAlign: 'center' }}\n        />\n        <Stack.Screen\n          name=\"home\"\n          component={Home}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"edit\"\n          component={EditProfile}\n          options={{ title: 'Edit', headerTitleAlign: 'center' }}\n        />\n        <Stack.Screen\n          name=\"add\"\n          component={addFriend}\n          options={{ title: 'Add Friend', headerTitleAlign: 'center' }}\n        />\n        <Stack.Screen\n          name=\"request\"\n          component={FriendRequest}\n          options={{ title: 'Friend Request', headerTitleAlign: 'center' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default MyStack;\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 25,\n    height: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}