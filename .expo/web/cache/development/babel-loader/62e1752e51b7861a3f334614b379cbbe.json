{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FriendScreen = function (_Component) {\n  _inherits(FriendScreen, _Component);\n\n  var _super = _createSuper(FriendScreen);\n\n  function FriendScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FriendScreen);\n\n    _this = _super.call(this, props);\n\n    _this.viewPost = function (friendPostId) {\n      var navigation = _this.props.navigation;\n      navigation.navigate('viewPost', {\n        friendPostId: friendPostId\n      });\n    };\n\n    _this.checkLoggedIn = function _callee() {\n      var navigation, token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context.sent;\n\n              if (token == null) {\n                navigation.navigate('login');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.get_profile_image = function _callee2() {\n      var token, friendsId;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context2.sent;\n              friendsId = _this.state.friendsId;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendsId + \"/photo\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (res) {\n                return res.blob();\n              }).then(function (resBlob) {\n                var data = URL.createObjectURL(resBlob);\n\n                _this.setState({\n                  photo: data,\n                  isLoading: false\n                });\n              }).catch(function (err) {\n                console.log('error', err);\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPost = function _callee3() {\n      var navigation, token, friendsId;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context3.sent;\n              friendsId = _this.state.friendsId;\n              return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendsId + \"/post\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('Can only view the post of yourself of your friends');\n                }\n\n                throw 'Something went wrong';\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getFriendData = function _callee4() {\n      var token, friendsId, navigation;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context4.sent;\n              friendsId = _this.state.friendsId;\n              navigation = _this.props.navigation;\n              return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendsId, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token,\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('Can only view the post of yourself of your friends');\n                }\n\n                throw 'Something went wrong';\n              }).catch(function (error) {\n                console.log(error);\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                _this.setState({\n                  userId: responseJson.user_id,\n                  firstName: responseJson.first_name,\n                  lastName: responseJson.last_name,\n                  friendCount: responseJson.friend_count\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendLike = function _callee5(postId) {\n      var navigation, token, friendsId;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context5.sent;\n              friendsId = _this.state.friendsId;\n              return _context5.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendsId + \"/post/\" + postId + \"/like\", {\n                method: 'POST',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getPost();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('You have already liked this post');\n                }\n\n                throw 'Something went wrong';\n              }));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendDislike = function _callee6(postId) {\n      var navigation, token, friendsId;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context6.sent;\n              friendsId = _this.state.friendsId;\n              return _context6.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendsId + \"/post/\" + postId + \"/like\", {\n                method: 'DELETE',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getPost();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('You have already liked this post');\n                }\n\n                throw 'Something went wrong';\n              }));\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      friendCount: '',\n      photo: null,\n      isLoading: true,\n      userId: '',\n      listData: '',\n      friendsId: _this.props.route.params.friendId\n    };\n    return _this;\n  }\n\n  _createClass(FriendScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      this.unsubscribe = navigation.addListener('focus', function () {\n        _this2.getPost();\n\n        _this2.getFriendData();\n\n        _this2.get_profile_image();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          friendCount = _this$state.friendCount,\n          listData = _this$state.listData,\n          photo = _this$state.photo;\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(ScrollView, {\n          style: styles.backgrd,\n          children: [_jsx(Image, {\n            source: photo,\n            style: styles.profileImg\n          }), _jsxs(Text, {\n            style: styles.txtName,\n            children: [firstName, \" \", lastName]\n          }), _jsxs(Text, {\n            style: styles.txt,\n            children: [\"Friends: \", friendCount]\n          }), _jsx(FlatList, {\n            data: listData,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                style: styles.postContainer,\n                children: [_jsx(Image, {\n                  style: styles.profileImgCont,\n                  source: require(\"../assets/nopic.png\")\n                }), _jsxs(Text, {\n                  style: styles.nameTxt,\n                  children: [item.author.first_name, \" \", item.author.last_name]\n                }), _jsxs(Text, {\n                  style: styles.contentSection,\n                  children: [\" \", item.text, \" \"]\n                }), _jsxs(View, {\n                  style: styles.rightButtons,\n                  children: [_jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"thumbs-o-up\",\n                      size: 15,\n                      color: \"white\",\n                      onPress: function onPress() {\n                        _this3.sendLike(item.post_id);\n                      }\n                    })\n                  }), _jsxs(Text, {\n                    children: [\" Likes: \", item.numLikes, \" \"]\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"thumbs-o-down\",\n                      size: 15,\n                      color: \"white\",\n                      onPress: function onPress() {\n                        _this3.sendDislike(item.post_id);\n                      }\n                    })\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"eye\",\n                      size: 15,\n                      color: \"white\"\n                    }),\n                    onPress: function onPress() {\n                      _this3.viewPost(item.post_id);\n                    }\n                  })]\n                })]\n              });\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return FriendScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998'\n  },\n  profileImg: {\n    alignSelf: 'center',\n    height: 100,\n    width: 100,\n    borderWidth: 1,\n    borderRadius: 75,\n    marginTop: 20\n  },\n  txt: {\n    alignSelf: 'center',\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2\n  },\n  txtName: {\n    alignSelf: 'center',\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 20\n  },\n  editbtn: {\n    alignItems: 'center',\n    backgroundColor: '#8b9dc3',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 2\n  },\n  backgrd: {\n    backgroundColor: '#3b5998'\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 300\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  },\n  profileImgCont: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30\n  },\n  position: {\n    bottom: 200\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15\n  }\n});\nexport default FriendScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/friendScreen.js"],"names":["AsyncStorage","React","Component","Icon","Button","FriendScreen","props","viewPost","friendPostId","navigation","navigate","checkLoggedIn","getItem","token","get_profile_image","friendsId","state","fetch","method","headers","then","res","blob","resBlob","data","URL","createObjectURL","setState","photo","isLoading","catch","err","console","log","getPost","response","status","json","Error","responseJson","listData","error","getFriendData","userId","user_id","firstName","first_name","lastName","last_name","friendCount","friend_count","sendLike","postId","sendDislike","route","params","friendId","unsubscribe","addListener","styles","centeredView","backgrd","profileImg","txtName","txt","item","postContainer","profileImgCont","require","nameTxt","author","contentSection","text","rightButtons","post_id","numLikes","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","alignSelf","height","width","borderWidth","borderRadius","marginTop","fontWeight","color","margin","fontSize","editbtn","padding","flexDirection","marginLeft","resizeMode","position","bottom","textAlign","textDecorationLine","button","elevation","textStyle","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable react/no-unused-state */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport { Text, View, Image, StyleSheet, FlatList } from 'react-native';\r\nimport { ScrollView } from 'react-native-web';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Button } from 'react-native-elements';\r\n\r\nclass FriendScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      friendCount: '',\r\n      photo: null,\r\n      isLoading: true,\r\n      userId: '',\r\n      listData: '',\r\n      friendsId: this.props.route.params.friendId,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { navigation } = this.props;\r\n    this.unsubscribe = navigation.addListener('focus', () => {\r\n      this.getPost();\r\n      this.getFriendData();\r\n      this.get_profile_image();\r\n    });\r\n  }\r\n\r\n  viewPost = (friendPostId) => {\r\n    const { navigation } = this.props;\r\n    navigation.navigate('viewPost', {\r\n      friendPostId: friendPostId,\r\n    });\r\n  };\r\n\r\n  checkLoggedIn = async () => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    if (token == null) {\r\n      navigation.navigate('login');\r\n    }\r\n  };\r\n\r\n  get_profile_image = async () => {\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { friendsId } = this.state;\r\n    fetch(`http://localhost:3333/api/1.0.0/user/${friendsId}/photo`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    })\r\n      .then((res) => res.blob())\r\n      .then((resBlob) => {\r\n        let data = URL.createObjectURL(resBlob);\r\n        this.setState({\r\n          photo: data,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('error', err);\r\n      });\r\n  };\r\n\r\n  getPost = async () => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { friendsId } = this.state;\r\n    return fetch(`http://localhost:3333/api/1.0.0/user/${friendsId}/post`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else if (response.status === 403) {\r\n          throw new Error('Can only view the post of yourself of your friends');\r\n        }\r\n        throw 'Something went wrong';\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          listData: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getFriendData = async () => {\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { friendsId } = this.state;\r\n    const { navigation } = this.props;\r\n    return fetch(`http://localhost:3333/api/1.0.0/user/${friendsId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else if (response.status === 403) {\r\n          throw new Error('Can only view the post of yourself of your friends');\r\n        }\r\n        throw 'Something went wrong';\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n        this.setState({\r\n          userId: responseJson.user_id,\r\n          firstName: responseJson.first_name,\r\n          lastName: responseJson.last_name,\r\n          friendCount: responseJson.friend_count,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  sendLike = async (postId) => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { friendsId } = this.state;\r\n    return fetch(\r\n      `http://localhost:3333/api/1.0.0/user/${friendsId}/post/${postId}/like`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'X-Authorization': token,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (response.status === 200) {\r\n        this.getPost();\r\n      }\r\n      if (response.status === 401) {\r\n        navigation.navigate('login');\r\n      } else if (response.status === 403) {\r\n        throw new Error('You have already liked this post');\r\n      }\r\n      throw 'Something went wrong';\r\n    });\r\n  };\r\n\r\n  sendDislike = async (postId) => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { friendsId } = this.state;\r\n    return fetch(\r\n      `http://localhost:3333/api/1.0.0/user/${friendsId}/post/${postId}/like`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'X-Authorization': token,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (response.status === 200) {\r\n        this.getPost();\r\n      }\r\n      if (response.status === 401) {\r\n        navigation.navigate('login');\r\n      } else if (response.status === 403) {\r\n        throw new Error('You have already liked this post');\r\n      }\r\n      throw 'Something went wrong';\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { firstName, lastName, friendCount, listData, photo } = this.state;\r\n    return (\r\n      <View style={styles.centeredView}>\r\n        <ScrollView style={styles.backgrd}>\r\n          <Image source={photo} style={styles.profileImg} />\r\n\r\n          <Text style={styles.txtName}>\r\n            {firstName} {lastName}\r\n          </Text>\r\n          <Text style={styles.txt}>Friends: {friendCount}</Text>\r\n          <FlatList\r\n            data={listData}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.postContainer}>\r\n                <Image\r\n                  style={styles.profileImgCont}\r\n                  source={require('../assets/nopic.png')}\r\n                />\r\n                <Text style={styles.nameTxt}>\r\n                  {item.author.first_name} {item.author.last_name}\r\n                </Text>\r\n                <Text style={styles.contentSection}> {item.text} </Text>\r\n                <View style={styles.rightButtons}>\r\n                  <Button\r\n                    icon={\r\n                      <Icon\r\n                        name=\"thumbs-o-up\"\r\n                        size={15}\r\n                        color=\"white\"\r\n                        onPress={() => {\r\n                          this.sendLike(item.post_id);\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Text> Likes: {item.numLikes} </Text>\r\n                  <Button\r\n                    icon={\r\n                      <Icon\r\n                        name=\"thumbs-o-down\"\r\n                        size={15}\r\n                        color=\"white\"\r\n                        onPress={() => {\r\n                          this.sendDislike(item.post_id);\r\n                        }}\r\n                      />\r\n                    }\r\n                  />\r\n                  <Button\r\n                    icon={<Icon name=\"eye\" size={15} color=\"white\" />}\r\n                    onPress={() => {\r\n                      this.viewPost(item.post_id);\r\n                    }}\r\n                  />\r\n                </View>\r\n              </View>\r\n            )}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#3b5998',\r\n  },\r\n  profileImg: {\r\n    alignSelf: 'center',\r\n    height: 100,\r\n    width: 100,\r\n    borderWidth: 1,\r\n    borderRadius: 75,\r\n    marginTop: 20,\r\n  },\r\n  txt: {\r\n    alignSelf: 'center',\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    margin: 2,\r\n  },\r\n  txtName: {\r\n    alignSelf: 'center',\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    fontSize: 20,\r\n  },\r\n  editbtn: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#8b9dc3',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    margin: 5,\r\n    borderWidth: 2,\r\n  },\r\n  backgrd: {\r\n    backgroundColor: '#3b5998',\r\n  },\r\n  rightButtons: {\r\n    flexDirection: 'row',\r\n    marginLeft: 300,\r\n  },\r\n  postContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    height: 300,\r\n    width: 400,\r\n    marginTop: 30,\r\n    borderWidth: 2,\r\n  },\r\n  profileImgCont: {\r\n    resizeMode: 'contain',\r\n    alignSelf: 'center',\r\n    height: 30,\r\n    width: 30,\r\n  },\r\n  position: {\r\n    bottom: 200,\r\n  },\r\n  nameTxt: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n    margin: 5,\r\n    width: 170,\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  contentSection: {\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\nexport default FriendScreen;\r\n"]},"metadata":{},"sourceType":"module"}