{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ViewPost = function (_Component) {\n  _inherits(ViewPost, _Component);\n\n  var _super = _createSuper(ViewPost);\n\n  function ViewPost(props) {\n    var _this;\n\n    _classCallCheck(this, ViewPost);\n\n    _this = _super.call(this, props);\n\n    _this.getPost = function _callee() {\n      var navigation, token, _this$state, postId, userId;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context.sent;\n              _this$state = _this.state, postId = _this$state.postId, userId = _this$state.userId;\n              return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      postId: _this.props.route.params.postId,\n      userId: _this.props.route.params.userId,\n      listData: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe = this.props.navigation.addListener('focus', function () {\n        _this2.getPost();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var listData = this.state.listData;\n      return _jsxs(ScrollView, {\n        style: styles.backgrd,\n        children: [_jsx(Image, {\n          source: {\n            uri: 'https://reactjs.org/logo-og.png'\n          },\n          style: styles.profileImg\n        }), _jsx(Text, {\n          style: styles.txtName,\n          children: \" \"\n        }), _jsx(Text, {\n          style: styles.txt,\n          children: \"Friends: \"\n        }), _jsx(FlatList, {\n          data: listData,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: styles.postContainer,\n              children: [_jsx(Image, {\n                style: styles.profileImgCont,\n                source: require(\"../assets/nopic.png\")\n              }), _jsxs(Text, {\n                style: styles.nameTxt,\n                children: [item.author.first_name, \" \", item.author.last_name]\n              }), _jsxs(Text, {\n                style: styles.contentSection,\n                children: [\" \", item.text, \" \"]\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return ViewPost;\n}(Component);\n\nvar styles = StyleSheet.create({\n  profileImg: {\n    width: 100,\n    height: 100,\n    borderRadius: 80,\n    borderColor: 'black',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 20\n  },\n  txt: {\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2\n  },\n  txtName: {\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 20\n  },\n  editbtn: {\n    alignItems: 'center',\n    backgroundColor: '#8b9dc3',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 2\n  },\n  backgrd: {\n    backgroundColor: '#3b5998'\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 300\n  },\n  profileImgCont: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30\n  },\n  position: {\n    bottom: 200\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15\n  }\n});\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/viewSinglePost.js"],"names":["AsyncStorage","React","Component","Icon","Button","ViewPost","props","getPost","navigation","getItem","token","state","postId","userId","fetch","method","headers","then","response","status","json","console","log","navigate","responseJson","setState","listData","catch","error","route","params","unsubscribe","addListener","styles","backgrd","uri","profileImg","txtName","txt","item","postContainer","profileImgCont","require","nameTxt","author","first_name","last_name","contentSection","text","StyleSheet","create","width","height","borderRadius","borderColor","borderWidth","justifyContent","alignItems","margin","fontWeight","color","fontSize","editbtn","backgroundColor","padding","buttonContainer","flexDirection","flex","marginTop","rightButtons","marginLeft","resizeMode","alignSelf","position","bottom","textAlign","textDecorationLine","button","elevation","textStyle","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable react/no-unused-state */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  ToastAndroid,\r\n  Alert,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from 'react-native';\r\nimport { ScrollView } from 'react-native-web';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Button } from 'react-native-elements';\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      postId: this.props.route.params.postId,\r\n      userId: this.props.route.params.userId,\r\n      listData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener('focus', () => {\r\n      this.getPost();\r\n    });\r\n  }\r\n\r\n  getPost = async () => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { postId, userId } = this.state;\r\n    return fetch(\r\n      `http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': token,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 400) {\r\n          console.log('Bad Request');\r\n        } else if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else {\r\n          throw 'Something went wrong';\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          listData: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { listData } = this.state;\r\n    return (\r\n      <ScrollView style={styles.backgrd}>\r\n        <Image\r\n          source={{ uri: 'https://reactjs.org/logo-og.png' }}\r\n          style={styles.profileImg}\r\n        />\r\n\r\n        <Text style={styles.txtName}>\r\n          {} {}\r\n        </Text>\r\n        <Text style={styles.txt}>Friends: {}</Text>\r\n        <FlatList\r\n          data={listData}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.postContainer}>\r\n              <Image\r\n                style={styles.profileImgCont}\r\n                source={require('../assets/nopic.png')}\r\n              />\r\n              <Text style={styles.nameTxt}>\r\n                {item.author.first_name} {item.author.last_name}\r\n              </Text>\r\n              <Text style={styles.contentSection}> {item.text} </Text>\r\n            </View>\r\n          )}\r\n        />\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  profileImg: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 80,\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: 20,\r\n  },\r\n  txt: {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    margin: 2,\r\n  },\r\n  txtName: {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    fontSize: 20,\r\n  },\r\n  editbtn: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#8b9dc3',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    margin: 5,\r\n    borderWidth: 2,\r\n  },\r\n  backgrd: {\r\n    backgroundColor: '#3b5998',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  postContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    height: 300,\r\n    width: 400,\r\n    marginTop: 30,\r\n    borderWidth: 2,\r\n  },\r\n  rightButtons: {\r\n    flexDirection: 'row',\r\n    marginLeft: 300,\r\n  },\r\n  profileImgCont: {\r\n    resizeMode: 'contain',\r\n    alignSelf: 'center',\r\n    height: 30,\r\n    width: 30,\r\n  },\r\n  position: {\r\n    bottom: 200,\r\n  },\r\n  nameTxt: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n    margin: 5,\r\n    width: 170,\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  contentSection: {\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}