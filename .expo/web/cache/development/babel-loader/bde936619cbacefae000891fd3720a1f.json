{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Icon } from 'react-native-elements/dist/icons/Icon';\nimport { Avatar } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.setModalVisible = function (visible) {\n      _this.setState({\n        modalVisible: visible\n      });\n    };\n\n    _this.sendPost = function _callee() {\n      var navigation, token, userId, post;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userId = _context.sent;\n              post = {\n                text: _this.state.userInput\n              };\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'X-Authorization': token\n                },\n                body: JSON.stringify(post)\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPost = function _callee2() {\n      var navigation, token, userID;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userID = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      modalVisible: false,\n      userInput: '',\n      listData: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          modalVisible = _this$state.modalVisible,\n          userInput = _this$state.userInput,\n          listData = _this$state.listData;\n      return _jsxs(View, {\n        style: styles.centeredView,\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            _this2.setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(TextInput, {\n                placeholder: \"Whats on your mind...\",\n                onChangeText: function onChangeText(userInput) {\n                  return _this2.setState({\n                    userInput: userInput\n                  });\n                },\n                value: userInput,\n                style: styles.input\n              }), _jsx(Pressable, {\n                style: [styles.button, styles.buttonClose],\n                onPress: function onPress() {\n                  return _this2.sendPost();\n                },\n                children: _jsx(Text, {\n                  style: styles.textStyle,\n                  children: \"Post\"\n                })\n              }), _jsx(Pressable, {\n                style: [styles.button, styles.buttonClose],\n                onPress: function onPress() {\n                  return _this2.setModalVisible(!modalVisible);\n                },\n                children: _jsx(Text, {\n                  style: styles.textStyle,\n                  children: \"Close\"\n                })\n              })]\n            })\n          })\n        }), _jsx(Pressable, {\n          style: [styles.button, styles.buttonOpen, styles.position],\n          onPress: function onPress() {\n            return _this2.setModalVisible(true);\n          },\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"Create post\"\n          })\n        }), _jsx(Button, {\n          title: \"Search:\",\n          onPress: function onPress() {\n            return _this2.getPost();\n          }\n        }), _jsx(ScrollView, {\n          children: _jsx(FlatList, {\n            data: listData,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsx(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: _jsxs(Text, {\n                  children: [item.text, _jsx(Icon.Button, {\n                    name: \"Like\",\n                    backgroundColor: \"3b5998\",\n                    onPress: _this2.likePost(),\n                    children: \"Login with facebook\"\n                  }), _jsx(Button, {\n                    title: \"Like\",\n                    onPress: function onPress() {\n                      return _this2.likePost();\n                    }\n                  }), _jsx(Button, {\n                    title: \"Dislike\",\n                    onPress: function onPress() {\n                      return _this2.dislikePost();\n                    }\n                  }), _jsx(Button, {\n                    title: \"Delete\",\n                    onPress: function onPress() {\n                      return _this2.deletePost();\n                    }\n                  })]\n                })\n              });\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n    backgroundColor: '#3b5998'\n  },\n  position: {\n    bottom: 200\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170\n  },\n  buttonOpen: {\n    backgroundColor: '#8b9dc3'\n  },\n  buttonClose: {\n    backgroundColor: '#8b9dc3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  input: {\n    height: 400,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/HomeScreen.js"],"names":["React","Component","AsyncStorage","Icon","Avatar","HomeScreen","props","setModalVisible","visible","setState","modalVisible","sendPost","navigation","getItem","token","userId","post","text","state","userInput","fetch","method","headers","body","JSON","stringify","then","response","status","json","console","log","navigate","getPost","userID","responseJson","listData","catch","error","styles","centeredView","modalView","input","button","buttonClose","textStyle","buttonOpen","position","item","flexDirection","likePost","dislikePost","deletePost","StyleSheet","create","flex","justifyContent","alignItems","marginTop","backgroundColor","bottom","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","modalText","marginBottom","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Pressable,\r\n  Modal,\r\n  TextInput,\r\n  FlatList,\r\n  Button,\r\n  ScrollView,\r\n} from 'react-native';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Icon } from 'react-native-elements/dist/icons/Icon';\r\nimport { Avatar } from 'react-native-elements';\r\n\r\nclass HomeScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modalVisible: false,\r\n      userInput: '',\r\n      listData: '',\r\n    };\r\n  }\r\n\r\n  setModalVisible = (visible) => {\r\n    this.setState({ modalVisible: visible });\r\n  };\r\n\r\n  sendPost = async () => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const userId = await AsyncStorage.getItem('@user_id');\r\n    const post = { text: this.state.userInput };\r\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/post`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Authorization': token,\r\n      },\r\n\r\n      body: JSON.stringify(post),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      }\r\n      if (response.status === 400) {\r\n        console.log('Bad Request');\r\n      } else if (response.status === 401) {\r\n        navigation.navigate('login');\r\n      } else {\r\n        throw 'Something went wrong';\r\n      }\r\n    });\r\n  };\r\n\r\n  getPost = async () => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const userID = await AsyncStorage.getItem('@user_id');\r\n    return fetch(`http://localhost:3333/api/1.0.0/user/${userID}/post`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 400) {\r\n          console.log('Bad Request');\r\n        } else if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else {\r\n          throw 'Something went wrong';\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          listData: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { modalVisible, userInput, listData } = this.state;\r\n    return (\r\n      <View style={styles.centeredView}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          visible={modalVisible}\r\n          onRequestClose={() => {\r\n            this.setModalVisible(!modalVisible);\r\n          }}\r\n        >\r\n          <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n              <TextInput\r\n                placeholder=\"Whats on your mind...\"\r\n                onChangeText={(userInput) => this.setState({ userInput })}\r\n                value={userInput}\r\n                style={styles.input}\r\n              />\r\n              <Pressable\r\n                style={[styles.button, styles.buttonClose]}\r\n                onPress={() => this.sendPost()}\r\n              >\r\n                <Text style={styles.textStyle}>Post</Text>\r\n              </Pressable>\r\n\r\n              <Pressable\r\n                style={[styles.button, styles.buttonClose]}\r\n                onPress={() => this.setModalVisible(!modalVisible)}\r\n              >\r\n                <Text style={styles.textStyle}>Close</Text>\r\n              </Pressable>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        <Pressable\r\n          style={[styles.button, styles.buttonOpen, styles.position]}\r\n          onPress={() => this.setModalVisible(true)}\r\n        >\r\n          <Text style={styles.textStyle}>Create post</Text>\r\n        </Pressable>\r\n        <Button title=\"Search:\" onPress={() => this.getPost()} />\r\n        <ScrollView>\r\n          <FlatList\r\n            data={listData}\r\n            renderItem={({ item }) => (\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <Text>\r\n                  {item.text}\r\n                  <Icon.Button\r\n                    name=\"Like\"\r\n                    backgroundColor=\"3b5998\"\r\n                    onPress={this.likePost()}\r\n                  >\r\n                    Login with facebook\r\n                  </Icon.Button>\r\n                  <Button title=\"Like\" onPress={() => this.likePost()} />\r\n                  <Button title=\"Dislike\" onPress={() => this.dislikePost()} />\r\n                  <Button title=\"Delete\" onPress={() => this.deletePost()} />\r\n                </Text>\r\n              </View>\r\n            )}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 22,\r\n    backgroundColor: '#3b5998',\r\n  },\r\n  position: {\r\n    bottom: 200,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n    margin: 5,\r\n    width: 170,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: '#8b9dc3',\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: '#8b9dc3',\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    height: 400,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}