{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FriendsList = function (_Component) {\n  _inherits(FriendsList, _Component);\n\n  var _super = _createSuper(FriendsList);\n\n  function FriendsList(props) {\n    var _this;\n\n    _classCallCheck(this, FriendsList);\n\n    _this = _super.call(this, props);\n\n    _this.getData = function _callee() {\n      var userInput, navigation, token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userInput = _this.state.userInput;\n              navigation = _this.props.navigation;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context.sent;\n              return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/search?q=\" + userInput, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userInput: '',\n      listData: []\n    };\n    return _this;\n  }\n\n  _createClass(FriendsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      this.unsubscribe = navigation.addListener('focus', function () {\n        _this2.getData();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state = this.state,\n          userInput = _this$state.userInput,\n          listData = _this$state.listData;\n      return _jsxs(ScrollView, {\n        style: styles.view,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: function onPress() {\n            navigation.navigate('add');\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Add Friends\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: function onPress() {\n            navigation.navigate('request');\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Friend Request\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Search friends list\",\n          onChangeText: function onChangeText(userInput) {\n            return _this3.setState({\n              userInput: userInput\n            });\n          },\n          value: userInput\n        }), _jsx(FlatList, {\n          data: listData,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: _jsxs(Text, {\n                children: [item.first_name, \" \", item.last_name]\n              })\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return FriendsList;\n}(Component);\n\nvar styles = StyleSheet.create({\n  view: {\n    backgroundColor: '#3b5998'\n  },\n  addButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10\n  }\n});\nexport default FriendsList;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/FriendsList.js"],"names":["React","Component","AsyncStorage","FriendsList","props","getData","userInput","state","navigation","getItem","token","fetch","method","headers","then","response","status","json","console","log","navigate","responseJson","setState","listData","catch","error","unsubscribe","addListener","styles","view","addButton","color","item","flexDirection","first_name","last_name","StyleSheet","create","backgroundColor","alignItems","justifyContent","padding","margin","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  View,\n  FlatList,\n  Button,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nclass FriendsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userInput: '',\n      listData: [],\n    };\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    this.unsubscribe = navigation.addListener('focus', () => {\n      this.getData();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  getData = async () => {\n    const { userInput } = this.state;\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    return fetch(`http://localhost:3333/api/1.0.0/search?q=${userInput}`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 400) {\n          console.log('Bad Request');\n        } else if (response.status === 401) {\n          navigation.navigate('login');\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .then((responseJson) => {\n        this.setState({\n          listData: responseJson,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { navigation } = this.props;\n    const { userInput, listData } = this.state;\n    return (\n      <ScrollView style={styles.view}>\n        <TouchableOpacity\n          style={styles.addButton}\n          onPress={() => {\n            navigation.navigate('add');\n          }}\n        >\n          <Text style={{ color: 'white' }}>Add Friends</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.addButton}\n          onPress={() => {\n            navigation.navigate('request');\n          }}\n        >\n          <Text style={{ color: 'white' }}>Friend Request</Text>\n        </TouchableOpacity>\n        <TextInput\n          placeholder=\"Search friends list\"\n          onChangeText={(userInput) => this.setState({ userInput })}\n          value={userInput}\n        />\n        <FlatList\n          data={listData}\n          renderItem={({ item }) => (\n            <View style={{ flexDirection: 'row' }}>\n              <Text>\n                {item.first_name} {item.last_name}\n              </Text>\n            </View>\n          )}\n        />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  view: {\n    backgroundColor: '#3b5998',\n  },\n  addButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10,\n  },\n});\n\nexport default FriendsList;\n"]},"metadata":{},"sourceType":"module"}