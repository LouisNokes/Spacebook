{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ViewPost = function (_Component) {\n  _inherits(ViewPost, _Component);\n\n  var _super = _createSuper(ViewPost);\n\n  function ViewPost(props) {\n    var _this;\n\n    _classCallCheck(this, ViewPost);\n\n    _this = _super.call(this, props);\n\n    _this.getPost = function _callee() {\n      var navigation, token, _this$state, postId, userId;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context.sent;\n              _this$state = _this.state, postId = _this$state.postId, userId = _this$state.userId;\n              return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      postId: _this.props.route.params.postId,\n      userId: _this.props.route.params.userId,\n      listData: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe = this.props.navigation.addListener('focus', function () {\n        _this2.getPost();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(ScrollView, {\n        children: _jsx(FlatList, {\n          data: listData,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: styles.postContainer,\n              children: [_jsx(Image, {\n                style: styles.profileImgCont,\n                source: require(\"../assets/nopic.png\")\n              }), _jsxs(Text, {\n                style: styles.nameTxt,\n                children: [item.author.first_name, \" \", item.author.last_name]\n              }), _jsxs(Text, {\n                style: styles.contentSection,\n                children: [\" \", item.text, \" \"]\n              }), _jsx(View, {\n                style: styles.rightButtons,\n                children: _jsx(Button, {\n                  icon: _jsx(Icon, {\n                    name: \"eye\",\n                    size: 15,\n                    color: \"white\"\n                  }),\n                  onPress: function onPress() {\n                    navigation.navigate('singlePost');\n                  }\n                })\n              })]\n            });\n          }\n        })\n      });\n    }\n  }]);\n\n  return ViewPost;\n}(Component);\n\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/viewSinglePost.js"],"names":["AsyncStorage","React","Component","Icon","Button","ViewPost","props","getPost","navigation","getItem","token","state","postId","userId","fetch","method","headers","then","response","status","json","console","log","navigate","responseJson","setState","listData","catch","error","route","params","unsubscribe","addListener","item","styles","postContainer","profileImgCont","require","nameTxt","author","first_name","last_name","contentSection","text","rightButtons"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable react/no-unused-state */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  ToastAndroid,\r\n  Alert,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from 'react-native';\r\nimport { ScrollView } from 'react-native-web';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Button } from 'react-native-elements';\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      postId: this.props.route.params.postId,\r\n      userId: this.props.route.params.userId,\r\n      listData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.props.navigation.addListener('focus', () => {\r\n      this.getPost();\r\n    });\r\n  }\r\n\r\n  getPost = async () => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { postId, userId } = this.state;\r\n    return fetch(\r\n      `http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': token,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 400) {\r\n          console.log('Bad Request');\r\n        } else if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else {\r\n          throw 'Something went wrong';\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          listData: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ScrollView>\r\n        <FlatList\r\n          data={listData}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.postContainer}>\r\n              <Image\r\n                style={styles.profileImgCont}\r\n                source={require('../assets/nopic.png')}\r\n              />\r\n              <Text style={styles.nameTxt}>\r\n                {item.author.first_name} {item.author.last_name}\r\n              </Text>\r\n              <Text style={styles.contentSection}> {item.text} </Text>\r\n              <View style={styles.rightButtons}>\r\n                <Button\r\n                  icon={<Icon name=\"eye\" size={15} color=\"white\" />}\r\n                  onPress={() => {\r\n                    navigation.navigate('singlePost');\r\n                  }}\r\n                />\r\n              </View>\r\n            </View>\r\n          )}\r\n        />\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}