{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ViewPost = function (_Component) {\n  _inherits(ViewPost, _Component);\n\n  var _super = _createSuper(ViewPost);\n\n  function ViewPost(props) {\n    var _this;\n\n    _classCallCheck(this, ViewPost);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var navigation, token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context.sent;\n\n              if (token == null) {\n                navigation.navigate('login');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.get_profile_image = function _callee2() {\n      var token, userId;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              userId = _context2.sent;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/photo\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (res) {\n                return res.blob();\n              }).then(function (resBlob) {\n                var data = URL.createObjectURL(resBlob);\n\n                _this.setState({\n                  photo: data,\n                  isLoading: false\n                });\n              }).catch(function (err) {\n                console.log('error', err);\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPost = function _callee3() {\n      var postId, navigation, token, userId;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              postId = _this.state.postId;\n              navigation = _this.props.navigation;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context3.sent;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 7:\n              userId = _context3.sent;\n              return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('Can only view the post of yourself of your friends');\n                }\n\n                throw 'Something went wrong';\n              }).then(function (responseJson) {\n                _this.setState({\n                  isLoading: false,\n                  text: responseJson.text,\n                  firstName: responseJson.author.first_name,\n                  lastName: responseJson.author.last_name,\n                  numLikes: responseJson.numLikes\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getFriendPost = function _callee4() {\n      var _this$state, friendPostId, friendId, navigation, token;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$state = _this.state, friendPostId = _this$state.friendPostId, friendId = _this$state.friendId;\n              navigation = _this.props.navigation;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context4.sent;\n              return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendId + \"/post/\" + friendPostId, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('Can only view the post of yourself of your friends');\n                }\n\n                throw 'Something went wrong';\n              }).then(function (responseJson) {\n                _this.setState({\n                  isLoading: false,\n                  text: responseJson.text,\n                  firstName: responseJson.author.first_name,\n                  lastName: responseJson.author.last_name,\n                  numLikes: responseJson.numLikes\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.get_friend_image = function _callee5() {\n      var token, friendId;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context5.sent;\n              friendId = _this.state.friendId;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + friendId + \"/photo\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (res) {\n                return res.blob();\n              }).then(function (resBlob) {\n                var data = URL.createObjectURL(resBlob);\n\n                _this.setState({\n                  photo: data,\n                  isLoading: false\n                });\n              }).catch(function (err) {\n                console.log('error', err);\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      listData: '',\n      firstName: '',\n      lastName: '',\n      numLikes: '',\n      postId: _this.props.route.params.postID,\n      friendId: _this.props.route.params.friendId,\n      friendPostId: _this.props.route.params.friendPostId,\n      photo: null\n    };\n    return _this;\n  }\n\n  _createClass(ViewPost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPost();\n      this.getFriendPost();\n      this.get_friend_image();\n      this.checkLoggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          photo = _this$state2.photo,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          text = _this$state2.text,\n          numLikes = _this$state2.numLikes;\n      var navigation = this.props.navigation;\n      return _jsxs(View, {\n        style: styles.centeredView,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.backBtn,\n          onPress: function onPress() {\n            navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Go back\"\n          })\n        }), _jsx(ScrollView, {\n          style: styles.backgrd,\n          children: _jsxs(View, {\n            style: styles.postContainer,\n            children: [_jsx(Image, {\n              style: styles.profileImgCont,\n              source: photo\n            }), _jsxs(Text, {\n              style: styles.nameTxt,\n              children: [firstName, \" \", lastName]\n            }), _jsxs(Text, {\n              style: styles.contentSection,\n              children: [\" \", text, \" \"]\n            }), _jsxs(Text, {\n              children: [\" Likes: \", numLikes, \" \"]\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return ViewPost;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998'\n  },\n  backgrd: {\n    backgroundColor: '#3b5998'\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  contentSection: {\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 15\n  },\n  backBtn: {\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: '#8b9dc3',\n    margin: 5,\n    borderWidth: 2\n  }\n});\nexport default ViewPost;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/viewSinglePost.js"],"names":["AsyncStorage","React","Component","ViewPost","props","checkLoggedIn","navigation","getItem","token","navigate","get_profile_image","userId","fetch","method","headers","then","res","blob","resBlob","data","URL","createObjectURL","setState","photo","isLoading","catch","err","console","log","getPost","postId","state","response","status","json","Error","responseJson","text","firstName","author","first_name","lastName","last_name","numLikes","error","getFriendPost","friendPostId","friendId","get_friend_image","listData","route","params","postID","styles","centeredView","backBtn","goBack","color","backgrd","postContainer","profileImgCont","nameTxt","contentSection","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderRadius","height","width","marginTop","borderWidth","fontWeight","textAlign","textDecorationLine","marginBottom","padding","margin"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable react/no-unused-state */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport { Text, View, Image, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { ScrollView } from 'react-native-web';\r\n\r\nclass ViewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      listData: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      numLikes: '',\r\n      postId: this.props.route.params.postID,\r\n      friendId: this.props.route.params.friendId,\r\n      friendPostId: this.props.route.params.friendPostId,\r\n      photo: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPost();\r\n    this.getFriendPost();\r\n    this.get_friend_image();\r\n    this.checkLoggedIn();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    if (token == null) {\r\n      navigation.navigate('login');\r\n    }\r\n  };\r\n\r\n  get_profile_image = async () => {\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const userId = await AsyncStorage.getItem('@user_id');\r\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/photo`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    })\r\n      .then((res) => res.blob())\r\n      .then((resBlob) => {\r\n        const data = URL.createObjectURL(resBlob);\r\n        this.setState({\r\n          photo: data,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('error', err);\r\n      });\r\n  };\r\n\r\n  getPost = async () => {\r\n    const { postId } = this.state;\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const userId = await AsyncStorage.getItem('@user_id');\r\n    return fetch(\r\n      `http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': token,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else if (response.status === 403) {\r\n          throw new Error('Can only view the post of yourself of your friends');\r\n        }\r\n        throw 'Something went wrong';\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          text: responseJson.text,\r\n          firstName: responseJson.author.first_name,\r\n          lastName: responseJson.author.last_name,\r\n          numLikes: responseJson.numLikes,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getFriendPost = async () => {\r\n    const { friendPostId, friendId } = this.state;\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    return fetch(\r\n      `http://localhost:3333/api/1.0.0/user/${friendId}/post/${friendPostId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'X-Authorization': token,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else if (response.status === 403) {\r\n          throw new Error('Can only view the post of yourself of your friends');\r\n        }\r\n        throw 'Something went wrong';\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          text: responseJson.text,\r\n          firstName: responseJson.author.first_name,\r\n          lastName: responseJson.author.last_name,\r\n          numLikes: responseJson.numLikes,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  get_friend_image = async () => {\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { friendId } = this.state;\r\n    fetch(`http://localhost:3333/api/1.0.0/user/${friendId}/photo`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    })\r\n      .then((res) => res.blob())\r\n      .then((resBlob) => {\r\n        let data = URL.createObjectURL(resBlob);\r\n        this.setState({\r\n          photo: data,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('error', err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { photo, firstName, lastName, text, numLikes } = this.state;\r\n    const { navigation } = this.props;\r\n    return (\r\n      <View style={styles.centeredView}>\r\n        <TouchableOpacity\r\n          style={styles.backBtn}\r\n          onPress={() => {\r\n            navigation.goBack();\r\n          }}\r\n        >\r\n          <Text style={{ color: 'white' }}>Go back</Text>\r\n        </TouchableOpacity>\r\n        <ScrollView style={styles.backgrd}>\r\n          <View style={styles.postContainer}>\r\n            <Image style={styles.profileImgCont} source={photo} />\r\n            <Text style={styles.nameTxt}>\r\n              {firstName} {lastName}\r\n            </Text>\r\n            <Text style={styles.contentSection}> {text} </Text>\r\n            <Text> Likes: {numLikes} </Text>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#3b5998',\r\n  },\r\n  backgrd: {\r\n    backgroundColor: '#3b5998',\r\n  },\r\n  postContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    height: 300,\r\n    width: 400,\r\n    marginTop: 30,\r\n    borderWidth: 2,\r\n  },\r\n  nameTxt: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  contentSection: {\r\n    textAlign: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n  },\r\n  backBtn: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    backgroundColor: '#8b9dc3',\r\n    margin: 5,\r\n    borderWidth: 2,\r\n  },\r\n});\r\n\r\nexport default ViewPost;\r\n"]},"metadata":{},"sourceType":"module"}