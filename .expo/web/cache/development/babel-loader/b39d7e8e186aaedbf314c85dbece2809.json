{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SettingScreen = function (_Component) {\n  _inherits(SettingScreen, _Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    _this = _super.call(this, props);\n\n    _this.logout = function _callee() {\n      var navigation, token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('@session_token'));\n\n            case 6:\n              return _context.abrupt(\"return\", fetch('http://localhost:3333/api/1.0.0/logout', {\n                method: 'post',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  navigation.navigate('login');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).catch(function (error) {\n                console.log(error);\n                ToastAndroid.show(error, ToastAndroid.SHORT);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.updateUser = function _callee3() {\n      var to_send, token, user_id;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              to_send = {};\n\n              if (_this.state.first_name != _this.state.profileData.first_name) {\n                to_send['first_name'] = _this.state.first_name;\n              }\n\n              if (_this.state.last_name != _this.state.profileData.last_name) {\n                to_send['last_name'] = _this.state.last_name;\n              }\n\n              if (_this.state.email != _this.state.profileData.email) {\n                to_send['email'] = _this.state.email;\n              }\n\n              if (_this.state.password != _this.state.profileData.password) {\n                to_send['password'] = _this.state.password;\n              }\n\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 7:\n              token = _context3.sent;\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 10:\n              user_id = _context3.sent;\n              return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + user_id, {\n                method: 'PATCH',\n                headers: {\n                  'X-Authorization': token,\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(_this.to_send)\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return 'OK';\n                }\n\n                if (response.status === 400) {\n                  throw 'Bad Request';\n                } else if (response.status === 401) {\n                  throw 'Unauthorised';\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function _callee2(responseJson) {\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        console.log(_this.data);\n\n                      case 1:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      token: '',\n      password: '',\n      email: '',\n      first_name: '',\n      last_name: ''\n    };\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          first_name = _this$state.first_name,\n          last_name = _this$state.last_name;\n      return _jsxs(View, {\n        style: styles.centeredView,\n        children: [_jsx(TextInput, {\n          placeholder: \"New email\",\n          onChangeText: function onChangeText(email) {\n            return _this2.setState({\n              email: email\n            });\n          },\n          value: email,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"New password\",\n          onChangeText: function onChangeText(password) {\n            return _this2.setState({\n              password: password\n            });\n          },\n          value: password,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"First Name\",\n          onChangeText: function onChangeText(first_name) {\n            return _this2.setState({\n              first_name: first_name\n            });\n          },\n          value: first_name,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Last Name\",\n          onChangeText: function onChangeText(last_name) {\n            return _this2.setState({\n              last_name: last_name\n            });\n          },\n          value: last_name,\n          style: styles.input\n        }), _jsx(TouchableOpacity, {\n          style: styles.settingPageBtn,\n          onPress: function onPress() {\n            _this2.updateUser();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Update\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.settingPageBtn,\n          onPress: function onPress() {\n            _this2.logout();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'red'\n            },\n            children: \"Sign out\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return SettingScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n    backgroundColor: '#3b5998'\n  },\n  position: {\n    bottom: 200\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  settingPageBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10,\n    borderWidth: 2\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#FFFFFF'\n  }\n});\nexport default SettingScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/settingScreen.js"],"names":["React","Component","AsyncStorage","SettingScreen","props","logout","navigation","getItem","token","removeItem","fetch","method","headers","then","response","status","navigate","catch","error","console","log","ToastAndroid","show","SHORT","updateUser","to_send","state","first_name","profileData","last_name","email","password","user_id","body","JSON","stringify","responseJson","data","styles","centeredView","setState","input","settingPageBtn","color","StyleSheet","create","flex","justifyContent","alignItems","marginTop","backgroundColor","position","bottom","modalView","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","borderWidth","textStyle","fontWeight","textAlign","modalText","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable no-throw-literal */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  ToastAndroid,\n} from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nclass SettingScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: '',\n      password: '',\n      email: '',\n      first_name: '',\n      last_name: '',\n    };\n  }\n\n  logout = async () => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    await AsyncStorage.removeItem('@session_token');\n    return fetch('http://localhost:3333/api/1.0.0/logout', {\n      method: 'post',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          navigation.navigate('login');\n        } else if (response.status === 401) {\n          navigation.navigate('login');\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        ToastAndroid.show(error, ToastAndroid.SHORT);\n      });\n  };\n\n  updateUser = async () => {\n    let to_send = {};\n\n    if (this.state.first_name != this.state.profileData.first_name) {\n      to_send['first_name'] = this.state.first_name;\n    }\n\n    if (this.state.last_name != this.state.profileData.last_name) {\n      to_send['last_name'] = this.state.last_name;\n    }\n\n    if (this.state.email != this.state.profileData.email) {\n      to_send['email'] = this.state.email;\n    }\n\n    if (this.state.password != this.state.profileData.password) {\n      to_send['password'] = this.state.password;\n    }\n    const token = await AsyncStorage.getItem('@session_token');\n    const user_id = await AsyncStorage.getItem('@user_id');\n    return fetch(`http://localhost:3333/api/1.0.0/user/${user_id}`, {\n      method: 'PATCH',\n      headers: {\n        'X-Authorization': token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.to_send),\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return 'OK';\n        }\n        if (response.status === 400) {\n          throw 'Bad Request';\n        } else if (response.status === 401) {\n          throw 'Unauthorised';\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .then(async (responseJson) => {\n        console.log(this.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { email, password, first_name, last_name } = this.state;\n    return (\n      <View style={styles.centeredView}>\n        <TextInput\n          placeholder=\"New email\"\n          onChangeText={(email) => this.setState({ email })}\n          value={email}\n          style={styles.input}\n        />\n        <TextInput\n          placeholder=\"New password\"\n          onChangeText={(password) => this.setState({ password })}\n          value={password}\n          style={styles.input}\n        />\n\n        <TextInput\n          placeholder=\"First Name\"\n          onChangeText={(first_name) => this.setState({ first_name })}\n          value={first_name}\n          style={styles.input}\n        />\n\n        <TextInput\n          placeholder=\"Last Name\"\n          onChangeText={(last_name) => this.setState({ last_name })}\n          value={last_name}\n          style={styles.input}\n        />\n\n        <TouchableOpacity\n          style={styles.settingPageBtn}\n          onPress={() => {\n            this.updateUser();\n          }}\n        >\n          <Text style={{ color: 'white' }}>Update</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.settingPageBtn}\n          onPress={() => {\n            this.logout();\n          }}\n        >\n          <Text style={{ color: 'red' }}>Sign out</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n    backgroundColor: '#3b5998',\n  },\n  position: {\n    bottom: 200,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  settingPageBtn: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10,\n    borderWidth: 2,\n  },\n\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#FFFFFF',\n  },\n});\n\nexport default SettingScreen;\n"]},"metadata":{},"sourceType":"module"}