{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddFriend = function (_Component) {\n  _inherits(AddFriend, _Component);\n\n  var _super = _createSuper(AddFriend);\n\n  function AddFriend(props) {\n    var _this;\n\n    _classCallCheck(this, AddFriend);\n\n    _this = _super.call(this, props);\n\n    _this.getData = function _callee() {\n      var userInput, navigation, token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userInput = _this.state.userInput;\n              navigation = _this.props.navigation;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context.sent;\n              return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/search?q=\" + userInput, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.addRequest = function _callee2(user_id) {\n      var token, navigation;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context2.sent;\n              navigation = _this.props.navigation;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + user_id + \"/friends\", {\n                method: 'post',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                }\n\n                if (response.status === 404) {\n                  Alert.alert('m');\n                }\n\n                return response.blob();\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkLoggedIn = function _callee3() {\n      var navigation, value;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              value = _context3.sent;\n\n              if (value == null) {\n                navigation.navigate('login');\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userInput: '',\n      listData: []\n    };\n    return _this;\n  }\n\n  _createClass(AddFriend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      this.unsubscribe = navigation.addListener('focus', function () {\n        _this2.checkLoggedIn();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          userInput = _this$state.userInput,\n          listData = _this$state.listData;\n      return _jsx(View, {\n        children: _jsxs(ScrollView, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Search...\",\n            onChangeText: function onChangeText(userInput) {\n              return _this3.setState({\n                userInput: userInput\n              });\n            },\n            value: userInput\n          }), _jsx(Button, {\n            title: \"Search:\",\n            onPress: function onPress() {\n              return _this3.getData();\n            }\n          }), _jsx(FlatList, {\n            data: listData,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: [_jsx(Image, {\n                  source: require(\"../assets/friends.png\")\n                }), _jsxs(Text, {\n                  children: [item.user_givenname, \" \", item.user_familyname, _jsx(Button, {\n                    title: \"Add\",\n                    onPress: function onPress() {\n                      return _this3.addRequest(item.user_id);\n                    }\n                  })]\n                })]\n              });\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return AddFriend;\n}(Component);\n\nexport default AddFriend;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/addFriend.js"],"names":["React","Component","AsyncStorage","AddFriend","props","getData","userInput","state","navigation","getItem","token","fetch","method","headers","then","response","status","json","console","log","navigate","responseJson","setState","listData","catch","error","addRequest","user_id","Alert","alert","blob","checkLoggedIn","value","unsubscribe","addListener","item","flexDirection","require","user_givenname","user_familyname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {\n  ScrollView,\n  Text,\n  Button,\n  TextInput,\n  FlatList,\n  View,\n  Image,\n  Alert,\n} from 'react-native-web';\n\nclass AddFriend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userInput: '',\n      listData: [],\n    };\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    this.unsubscribe = navigation.addListener('focus', () => {\n      this.checkLoggedIn();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  getData = async () => {\n    // Validation (Cant search for yourself or friends you've already added)\n    const { userInput } = this.state;\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    return fetch(`http://localhost:3333/api/1.0.0/search?q=${userInput}`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 400) {\n          console.log('Bad Request');\n        } else if (response.status === 401) {\n          navigation.navigate('login');\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .then((responseJson) => {\n        this.setState({\n          listData: responseJson,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  addRequest = async (user_id) => {\n    const token = await AsyncStorage.getItem('@session_token');\n    const { navigation } = this.props;\n    fetch(`http://localhost:3333/api/1.0.0/user/${user_id}/friends`, {\n      method: 'post',\n      headers: {\n        'X-Authorization': token,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        return response.json();\n      }\n      if (response.status === 401) {\n        navigation.navigate('login');\n      }\n      if (response.status === 404) {\n        Alert.alert('m');\n      }\n      return response.blob();\n    });\n  };\n\n  checkLoggedIn = async () => {\n    const { navigation } = this.props;\n    const value = await AsyncStorage.getItem('@session_token');\n    if (value == null) {\n      navigation.navigate('login');\n    }\n  };\n\n  render() {\n    const { userInput, listData } = this.state;\n    return (\n      <View>\n        <ScrollView>\n          <TextInput\n            placeholder=\"Search...\"\n            onChangeText={(userInput) => this.setState({ userInput })}\n            value={userInput}\n          />\n          <Button title=\"Search:\" onPress={() => this.getData()} />\n\n          <FlatList\n            data={listData}\n            renderItem={({ item }) => (\n              <View style={{ flexDirection: 'row' }}>\n                <Image source={require('../assets/friends.png')} />\n                <Text>\n                  {item.user_givenname} {item.user_familyname}\n                  <Button\n                    title=\"Add\"\n                    onPress={() => this.addRequest(item.user_id)}\n                  />\n                </Text>\n              </View>\n            )}\n          />\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default AddFriend;\n"]},"metadata":{},"sourceType":"module"}