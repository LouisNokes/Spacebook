{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FriendsList = function (_Component) {\n  _inherits(FriendsList, _Component);\n\n  var _super = _createSuper(FriendsList);\n\n  function FriendsList(props) {\n    var _this;\n\n    _classCallCheck(this, FriendsList);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var navigation, value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              value = _context.sent;\n\n              if (value == null) {\n                navigation.navigate('login');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.viewFriend = function (friendId) {\n      var navigation = _this.props.navigation;\n      navigation.navigate('friendScreen', {\n        friendId: friendId\n      });\n    };\n\n    _this.getFriends = function _callee2() {\n      var navigation, token, userId;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userId = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/friends\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw new Error('Something went wrong');\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.searchFriends = function _callee3() {\n      var navigation, userInput, token;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              userInput = _this.state.userInput;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context3.sent;\n              return _context3.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/search?q=\" + userInput + \"&search_in=friends&limit=\" + _this.state.limit + \"&offset=\" + _this.state.offset, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      listData: [],\n      userInput: '',\n      limit: 5,\n      offset: 0,\n      photo: null\n    };\n    return _this;\n  }\n\n  _createClass(FriendsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      this.unsubscribe = navigation.addListener('focus', function () {\n        _this2.getFriends();\n\n        _this2.checkLoggedIn();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state = this.state,\n          listData = _this$state.listData,\n          userInput = _this$state.userInput;\n      return _jsxs(ScrollView, {\n        style: styles.view,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: function onPress() {\n            navigation.navigate('add');\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Add Friends\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: function onPress() {\n            navigation.navigate('request');\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Friend Request\"\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Search for friends\",\n          onChangeText: function onChangeText(userInput) {\n            return _this3.setState({\n              userInput: userInput\n            });\n          },\n          value: userInput,\n          style: styles.input\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            _this3.searchFriends();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Search\"\n          })\n        }), _jsx(Text, {\n          children: \" My Friends \"\n        }), _jsx(FlatList, {\n          data: listData,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: styles.postContainer,\n              children: [_jsxs(Text, {\n                children: [item.user_givenname, \" \", item.user_familyname]\n              }), _jsx(Button, {\n                style: styles.searchButton,\n                title: \"View\",\n                onPress: function onPress() {\n                  _this3.viewFriend(item.user_id);\n                }\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return FriendsList;\n}(Component);\n\nvar styles = StyleSheet.create({\n  view: {\n    backgroundColor: '#3b5998'\n  },\n  addButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10\n  },\n  searchButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#FFFFFF'\n  },\n  postContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  }\n});\nexport default FriendsList;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/friendsList.js"],"names":["React","Component","AsyncStorage","FriendsList","props","checkLoggedIn","navigation","getItem","value","navigate","viewFriend","friendId","getFriends","token","userId","fetch","method","headers","then","response","status","json","console","log","Error","responseJson","setState","listData","catch","error","searchFriends","userInput","state","limit","offset","photo","unsubscribe","addListener","styles","view","addButton","color","input","item","postContainer","user_givenname","user_familyname","searchButton","user_id","StyleSheet","create","backgroundColor","alignItems","justifyContent","padding","margin","borderRadius","height","borderWidth","flex","flexDirection","width","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  FlatList,\n  View,\n  TextInput,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Button } from 'react-native-web';\n\nclass FriendsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listData: [],\n      userInput: '',\n      limit: 5,\n      offset: 0,\n      photo: null,\n    };\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    this.unsubscribe = navigation.addListener('focus', () => {\n      this.getFriends();\n      this.checkLoggedIn();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  checkLoggedIn = async () => {\n    const { navigation } = this.props;\n    const value = await AsyncStorage.getItem('@session_token');\n    if (value == null) {\n      navigation.navigate('login');\n    }\n  };\n\n  viewFriend = (friendId) => {\n    const { navigation } = this.props;\n    navigation.navigate('friendScreen', {\n      friendId: friendId,\n    });\n  };\n\n  getFriends = async () => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    return fetch(`http://localhost:3333/api/1.0.0/user/${userId}/friends`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 400) {\n          console.log('Bad Request');\n        } else if (response.status === 401) {\n          navigation.navigate('login');\n        } else {\n          throw new Error('Something went wrong');\n        }\n      })\n      .then((responseJson) => {\n        this.setState({\n          listData: responseJson,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  searchFriends = async () => {\n    const { navigation } = this.props;\n    const { userInput } = this.state;\n    const token = await AsyncStorage.getItem('@session_token');\n    return fetch(\n      `http://localhost:3333/api/1.0.0/search?q=${userInput}&search_in=friends&limit=${this.state.limit}&offset=${this.state.offset}`,\n      {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n        },\n      }\n    )\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 400) {\n          console.log('Bad Request');\n        } else if (response.status === 401) {\n          navigation.navigate('login');\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .then((responseJson) => {\n        this.setState({\n          listData: responseJson,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { navigation } = this.props;\n    const { listData, userInput } = this.state;\n    return (\n      <ScrollView style={styles.view}>\n        <TouchableOpacity\n          style={styles.addButton}\n          onPress={() => {\n            navigation.navigate('add');\n          }}\n        >\n          <Text style={{ color: 'white' }}>Add Friends</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.addButton}\n          onPress={() => {\n            navigation.navigate('request');\n          }}\n        >\n          <Text style={{ color: 'white' }}>Friend Request</Text>\n        </TouchableOpacity>\n        <TextInput\n          placeholder=\"Search for friends\"\n          onChangeText={(userInput) => this.setState({ userInput })}\n          value={userInput}\n          style={styles.input}\n        />\n        <TouchableOpacity\n          onPress={() => {\n            this.searchFriends();\n          }}\n        >\n          <Text style={{ color: 'white' }}>Search</Text>\n        </TouchableOpacity>\n        <Text> My Friends </Text>\n        <FlatList\n          data={listData}\n          renderItem={({ item }) => (\n            <View style={styles.postContainer}>\n              <Text>\n                {item.user_givenname} {item.user_familyname}\n              </Text>\n              <Button\n                style={styles.searchButton}\n                title=\"View\"\n                onPress={() => {\n                  this.viewFriend(item.user_id);\n                }}\n              />\n            </View>\n          )}\n        />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  view: {\n    backgroundColor: '#3b5998',\n  },\n  addButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10,\n  },\n  searchButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#8b9dc3',\n    padding: 10,\n    margin: 5,\n    borderRadius: 10,\n  },\n  input: {\n    height: 40,\n    margin: 5,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#FFFFFF',\n  },\n  postContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2,\n  },\n});\n\nexport default FriendsList;\n"]},"metadata":{},"sourceType":"module"}