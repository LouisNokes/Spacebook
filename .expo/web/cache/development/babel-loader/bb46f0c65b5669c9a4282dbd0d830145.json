{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signup = function (_Component) {\n  _inherits(Signup, _Component);\n\n  var _super = _createSuper(Signup);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _super.call(this, props);\n\n    _this.signup = function () {\n      var userData = {\n        first_name: _this.state.first_name,\n        last_name: _this.state.last_name,\n        email: _this.state.email,\n        password: _this.state.password\n      };\n\n      if (_this.state.first_name === '' || _this.state.last_name === '' || _this.state.email === '' || _this.state.password === '') {\n        ToastAndroid.show('Please fill in all fields', ToastAndroid.SHORT);\n      } else if (_this.state.password.length < 5) {\n        ToastAndroid.show('Password is too short', ToastAndroid.SHORT);\n      } else {\n        return fetch('http://localhost:3333/api/1.0.0/user', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userData)\n        }).then(function (response) {\n          if (response.status === 201) {\n            ToastAndroid.show('Account created successfully', ToastAndroid.SHORT);\n          } else if (response.status === 400) {\n            throw 'Failed validation';\n          } else if (response.status === 500) {\n            throw 'Server error';\n          } else {\n            throw 'Something went wrong';\n          }\n        }).then(function (responseJson) {\n          console.log('User created with ID: ', responseJson);\n\n          _this.props.navigation.navigate('login');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(ScrollView, {\n        children: [_jsx(TextInput, {\n          placeholder: \"First Name\",\n          onChangeText: function onChangeText(first_name) {\n            return _this2.setState({\n              first_name: first_name\n            });\n          },\n          value: this.state.first_name,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Last Name\",\n          onChangeText: function onChangeText(last_name) {\n            return _this2.setState({\n              last_name: last_name\n            });\n          },\n          value: this.state.last_name,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Email\",\n          onChangeText: function onChangeText(email) {\n            return _this2.setState({\n              email: email\n            });\n          },\n          value: this.state.email,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(password) {\n            return _this2.setState({\n              password: password\n            });\n          },\n          value: this.state.password,\n          style: styles.input\n        }), _jsx(TouchableOpacity, {\n          style: styles.signupBtn,\n          onPress: function onPress() {\n            _this2.signup();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'black'\n            },\n            children: \"SIGN UP\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    margin: 5\n  },\n  signupBtn: {\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: '#7649fe',\n    margin: 5,\n    borderWidth: 2\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/SignupScreen.js"],"names":["React","Component","Signup","props","signup","userData","first_name","state","last_name","email","password","ToastAndroid","show","SHORT","length","fetch","method","headers","body","JSON","stringify","then","response","status","responseJson","console","log","navigation","navigate","catch","error","setState","styles","input","signupBtn","color","StyleSheet","create","height","margin","borderWidth","padding","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n  TextInput,\n  ToastAndroid,\n} from 'react-native';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n    };\n  }\n\n  signup = () => {\n    let userData = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    if (\n      this.state.first_name === '' ||\n      this.state.last_name === '' ||\n      this.state.email === '' ||\n      this.state.password === ''\n    ) {\n      ToastAndroid.show('Please fill in all fields', ToastAndroid.SHORT);\n    } else if (this.state.password.length < 5) {\n      ToastAndroid.show('Password is too short', ToastAndroid.SHORT);\n    } else {\n      return fetch('http://localhost:3333/api/1.0.0/user', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      })\n        .then((response) => {\n          if (response.status === 201) {\n            ToastAndroid.show(\n              'Account created successfully',\n              ToastAndroid.SHORT\n            );\n          } else if (response.status === 400) {\n            throw 'Failed validation';\n          } else if (response.status === 500) {\n            throw 'Server error';\n          } else {\n            throw 'Something went wrong';\n          }\n        })\n        .then((responseJson) => {\n          console.log('User created with ID: ', responseJson);\n          this.props.navigation.navigate('login');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  render() {\n    return (\n      <ScrollView>\n        <TextInput\n          placeholder=\"First Name\"\n          onChangeText={(first_name) => this.setState({ first_name })}\n          value={this.state.first_name}\n          style={styles.input}\n        />\n        <TextInput\n          placeholder=\"Last Name\"\n          onChangeText={(last_name) => this.setState({ last_name })}\n          value={this.state.last_name}\n          style={styles.input}\n        />\n\n        <TextInput\n          placeholder=\"Email\"\n          onChangeText={(email) => this.setState({ email })}\n          value={this.state.email}\n          style={styles.input}\n        />\n        <TextInput\n          placeholder=\"Password\"\n          onChangeText={(password) => this.setState({ password })}\n          value={this.state.password}\n          style={styles.input}\n        />\n        <TouchableOpacity\n          style={styles.signupBtn}\n          onPress={() => {\n            this.signup();\n          }}\n        >\n          <Text style={{ color: 'black' }}>SIGN UP</Text>\n        </TouchableOpacity>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    margin: 5,\n  },\n  signupBtn: {\n    alignItems: 'center',\n    padding: 10,\n    backgroundColor: '#7649fe',\n    margin: 5,\n    borderWidth: 2,\n  },\n});\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}