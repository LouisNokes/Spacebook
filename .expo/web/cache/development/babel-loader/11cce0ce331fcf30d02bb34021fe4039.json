{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddFriend = function (_Component) {\n  _inherits(AddFriend, _Component);\n\n  var _super = _createSuper(AddFriend);\n\n  function AddFriend(props) {\n    var _this;\n\n    _classCallCheck(this, AddFriend);\n\n    _this = _super.call(this, props);\n\n    _this.getImage = function _callee() {\n      var userInput, navigation, token, userId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userInput = _this.state.userInput;\n              navigation = _this.props.navigation;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 7:\n              userId = _context.sent;\n              return _context.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user\" + userId + \"/photo\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getData = function _callee2() {\n      var userInput, navigation, token;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              userInput = _this.state.userInput;\n              navigation = _this.props.navigation;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/search?q=\" + userInput, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.addRequest = function _callee3(user_id) {\n      var token, navigation;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context3.sent;\n              navigation = _this.props.navigation;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + user_id + \"/friends\", {\n                method: 'post',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                }\n\n                if (response.status === 404) {\n                  Alert.alert('m');\n                }\n\n                return response.blob();\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkLoggedIn = function _callee4() {\n      var navigation, value;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              value = _context4.sent;\n\n              if (value == null) {\n                navigation.navigate('login');\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      userInput: '',\n      listData: []\n    };\n    return _this;\n  }\n\n  _createClass(AddFriend, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      this.unsubscribe = navigation.addListener('focus', function () {\n        _this2.checkLoggedIn();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          userInput = _this$state.userInput,\n          listData = _this$state.listData;\n      return _jsx(View, {\n        children: _jsxs(ScrollView, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Search...\",\n            onChangeText: function onChangeText(userInput) {\n              return _this3.setState({\n                userInput: userInput\n              });\n            },\n            value: userInput\n          }), _jsx(Button, {\n            title: \"Search:\",\n            onPress: function onPress() {\n              return _this3.getData();\n            }\n          }), _jsx(FlatList, {\n            data: listData,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: [_jsx(Image, {\n                  source: require(\"../assets/friends.png\")\n                }), _jsxs(Text, {\n                  children: [item.user_givenname, \" \", item.user_familyname, _jsx(Button, {\n                    title: \"Add\",\n                    onPress: function onPress() {\n                      return _this3.addRequest(item.user_id);\n                    }\n                  })]\n                })]\n              });\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return AddFriend;\n}(Component);\n\nexport default AddFriend;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/addFriend.js"],"names":["React","Component","AsyncStorage","Card","AddFriend","props","getImage","userInput","state","navigation","getItem","token","userId","fetch","method","headers","then","response","status","json","console","log","navigate","responseJson","setState","listData","catch","error","getData","addRequest","user_id","Alert","alert","blob","checkLoggedIn","value","unsubscribe","addListener","item","flexDirection","require","user_givenname","user_familyname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {\r\n  ScrollView,\r\n  Text,\r\n  Button,\r\n  TextInput,\r\n  FlatList,\r\n  View,\r\n  Image,\r\n  Alert,\r\n  Card,\r\n} from 'react-native-web';\r\n\r\nclass AddFriend extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userInput: '',\r\n      listData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { navigation } = this.props;\r\n    this.unsubscribe = navigation.addListener('focus', () => {\r\n      this.checkLoggedIn();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  getImage = async () => {\r\n    const { userInput } = this.state;\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const userId = await AsyncStorage.getItem('@user_id');\r\n    return fetch(`http://localhost:3333/api/1.0.0/user${userId}/photo`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 400) {\r\n          console.log('Bad Request');\r\n        } else if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else {\r\n          throw 'Something went wrong';\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          listData: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getData = async () => {\r\n    const { userInput } = this.state;\r\n    const { navigation } = this.props;\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    return fetch(`http://localhost:3333/api/1.0.0/search?q=${userInput}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 400) {\r\n          console.log('Bad Request');\r\n        } else if (response.status === 401) {\r\n          navigation.navigate('login');\r\n        } else {\r\n          throw 'Something went wrong';\r\n        }\r\n      })\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          listData: responseJson,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  addRequest = async (user_id) => {\r\n    const token = await AsyncStorage.getItem('@session_token');\r\n    const { navigation } = this.props;\r\n    fetch(`http://localhost:3333/api/1.0.0/user/${user_id}/friends`, {\r\n      method: 'post',\r\n      headers: {\r\n        'X-Authorization': token,\r\n      },\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      }\r\n      if (response.status === 401) {\r\n        navigation.navigate('login');\r\n      }\r\n      if (response.status === 404) {\r\n        Alert.alert('m');\r\n      }\r\n      return response.blob();\r\n    });\r\n  };\r\n\r\n  checkLoggedIn = async () => {\r\n    const { navigation } = this.props;\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n    if (value == null) {\r\n      navigation.navigate('login');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { userInput, listData } = this.state;\r\n    return (\r\n      <View>\r\n        <ScrollView>\r\n          <TextInput\r\n            placeholder=\"Search...\"\r\n            onChangeText={(userInput) => this.setState({ userInput })}\r\n            value={userInput}\r\n          />\r\n          <Button title=\"Search:\" onPress={() => this.getData()} />\r\n          <FlatList\r\n            data={listData}\r\n            renderItem={({ item }) => (\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <Image source={require('../assets/friends.png')} />\r\n                <Text>\r\n                  {item.user_givenname} {item.user_familyname}\r\n                  <Button\r\n                    title=\"Add\"\r\n                    onPress={() => this.addRequest(item.user_id)}\r\n                  />\r\n                </Text>\r\n              </View>\r\n            )}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFriend;\r\n"]},"metadata":{},"sourceType":"module"}