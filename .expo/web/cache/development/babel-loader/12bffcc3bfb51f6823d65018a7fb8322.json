{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProfileScreen = function (_Component) {\n  _inherits(ProfileScreen, _Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileScreen);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              value = _context.sent;\n\n              if (value !== null) {\n                _this.setState({\n                  token: value\n                });\n              } else {\n                _this.props.navigation.navigate('login');\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getProfileData = function _callee2() {\n      var token, uID;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              uID = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://10.0.2.2:3333/api/1.0.0/user/\" + uID, {\n                method: 'get',\n                headers: {\n                  'X-Authorization': token,\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  Alert.alert('nope');\n                } else if (response.status === 404) {\n                  Alert.alert('m');\n                }\n              }).catch(function (error) {\n                console.log(error);\n                ToastAndroid.show(error, ToastAndroid.SHORT);\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                _this.setState({\n                  user_id: responseJson.user_id,\n                  first_name: responseJson.first_name,\n                  last_name: responseJson.last_name,\n                  friend_count: responseJson.friend_count\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      friend_count: '',\n      user_id: '',\n      token: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProfileData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: 50\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: 'https://reactjs.org/logo-og.png'\n          },\n          style: styles.profileImg\n        }), _jsxs(Text, {\n          style: styles.txt,\n          children: [this.state.first_name, \" \", this.state.last_name]\n        }), _jsxs(Text, {\n          style: styles.txt,\n          children: [\"Friends: \", this.state.friend_count]\n        }), _jsx(Button, {\n          title: \"Edit Profile\"\n        })]\n      });\n    }\n  }]);\n\n  return ProfileScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  profileImg: {\n    width: 100,\n    height: 100,\n    borderRadius: 80,\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  txt: {\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/ProfileScreen.js"],"names":["AsyncStorage","React","Component","ProfileScreen","props","checkLoggedIn","getItem","value","setState","token","navigation","navigate","getProfileData","uID","fetch","method","headers","then","response","status","json","Alert","alert","catch","error","console","log","ToastAndroid","show","SHORT","responseJson","user_id","first_name","last_name","friend_count","state","justifyContent","alignItems","margin","uri","styles","profileImg","txt","StyleSheet","create","width","height","borderRadius","borderColor","borderWidth","fontWeight","color"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/no-unused-state */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  Button,\r\n  ToastAndroid,\r\n  Alert,\r\n  Image,\r\n  StyleSheet,\r\n} from 'react-native';\r\n\r\nclass ProfileScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      first_name: '',\r\n      last_name: '',\r\n      friend_count: '',\r\n      user_id: '',\r\n      token: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProfileData();\r\n  }\r\n\r\n  checkLoggedIn = async () => {\r\n    const value = await AsyncStorage.getItem('@session_token');\r\n    if (value !== null) {\r\n      this.setState({ token: value });\r\n    } else {\r\n      this.props.navigation.navigate('login');\r\n    }\r\n  };\r\n\r\n  getProfileData = async () => {\r\n    let token = await AsyncStorage.getItem('@session_token');\r\n    let uID = await AsyncStorage.getItem('@user_id');\r\n\r\n    return fetch(`http://10.0.2.2:3333/api/1.0.0/user/${uID}`, {\r\n      method: 'get',\r\n      headers: {\r\n        'X-Authorization': token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        if (response.status === 401) {\r\n          Alert.alert('nope');\r\n        } else if (response.status === 404) {\r\n          Alert.alert('m');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        ToastAndroid.show(error, ToastAndroid.SHORT);\r\n      })\r\n      .then((responseJson) => {\r\n        console.log(responseJson);\r\n        this.setState({\r\n          user_id: responseJson.user_id,\r\n          first_name: responseJson.first_name,\r\n          last_name: responseJson.last_name,\r\n          friend_count: responseJson.friend_count,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View\r\n        style={{\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          margin: 50,\r\n        }}\r\n      >\r\n        <Image\r\n          source={{ uri: 'https://reactjs.org/logo-og.png' }}\r\n          style={styles.profileImg}\r\n        />\r\n\r\n        <Text style={styles.txt}>\r\n          {this.state.first_name} {this.state.last_name}\r\n        </Text>\r\n        <Text style={styles.txt}>Friends: {this.state.friend_count}</Text>\r\n        <Button title=\"Edit Profile\" />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  profileImg: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 80,\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n  },\r\n  txt: {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    margin: 2,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}