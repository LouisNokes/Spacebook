{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.setModalVisible = function (visible) {\n      _this.setState({\n        modalVisible: visible\n      });\n    };\n\n    _this.sendPost = function _callee() {\n      var navigation, modalVisible, token, userId, post;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              modalVisible = _this.state.modalVisible;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 7:\n              userId = _context.sent;\n              post = {\n                text: _this.state.userInput\n              };\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'X-Authorization': token\n                },\n                body: JSON.stringify(post)\n              }).then(function (response) {\n                if (response.status === 201) {\n                  _this.setModalVisible(!modalVisible);\n\n                  _this.getPost();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPost = function _callee2() {\n      var navigation, token, userID;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userID = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getFriendPost = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendLike = function _callee4(postId) {\n      var navigation, token, userId;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context4.sent;\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userId = _context4.sent;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId + \"/like\", {\n                method: 'POST',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getPost();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendDislike = function _callee5(postId) {\n      var navigation, token, userId;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context5.sent;\n              _context5.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userId = _context5.sent;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId + \"/like\", {\n                method: 'DELETE',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  navigation.navigate('home');\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.deletePost = function _callee6(postId) {\n      var token, userId, navigation;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context6.sent;\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              userId = _context6.sent;\n              navigation = _this.props.navigation;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId, {\n                method: 'DELETE',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getPost();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      modalVisible: false,\n      userInput: '',\n      listData: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe = this.props.navigation.addListener('focus', function () {\n        _this2.getPost();\n\n        _this2.getFriendPost();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          modalVisible = _this$state.modalVisible,\n          userInput = _this$state.userInput,\n          listData = _this$state.listData;\n      var navigation = this.props.navigation;\n      return _jsxs(View, {\n        style: styles.centeredView,\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            _this3.setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(TextInput, {\n                placeholder: \"Whats on your mind...\",\n                onChangeText: function onChangeText(userInput) {\n                  return _this3.setState({\n                    userInput: userInput\n                  });\n                },\n                value: userInput,\n                style: styles.input\n              }), _jsx(Pressable, {\n                style: [styles.button, styles.buttonClose],\n                onPress: function onPress() {\n                  return _this3.sendPost();\n                },\n                children: _jsx(Text, {\n                  style: styles.textStyle,\n                  children: \"Post\"\n                })\n              }), _jsx(Pressable, {\n                style: [styles.button, styles.buttonClose],\n                onPress: function onPress() {\n                  return _this3.setModalVisible(!modalVisible);\n                },\n                children: _jsx(Text, {\n                  style: styles.textStyle,\n                  children: \"Close\"\n                })\n              })]\n            })\n          })\n        }), _jsx(Button, {\n          style: [styles.button, styles.buttonOpen],\n          onPress: function onPress() {\n            return _this3.setModalVisible(true);\n          },\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"Create post\"\n          })\n        }), _jsx(FlatList, {\n          data: listData,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: styles.postContainer,\n              children: [_jsx(Image, {\n                style: styles.profileImg,\n                source: require(\"../assets/nopic.png\")\n              }), _jsxs(Text, {\n                style: styles.nameTxt,\n                children: [item.author.first_name, \" \", item.author.last_name]\n              }), _jsxs(Text, {\n                style: styles.contentSection,\n                children: [\" \", item.text, \" \"]\n              }), _jsxs(View, {\n                style: styles.buttonContainer,\n                children: [_jsxs(Text, {\n                  children: [\" \", item.numLikes, \" \"]\n                }), _jsx(Button, {\n                  icon: _jsx(Icon, {\n                    name: \"thumbs-o-up\",\n                    size: 15,\n                    color: \"white\",\n                    onPress: function _callee7() {\n                      return _regeneratorRuntime.async(function _callee7$(_context7) {\n                        while (1) {\n                          switch (_context7.prev = _context7.next) {\n                            case 0:\n                              _this3.sendLike(item.post_id);\n\n                            case 1:\n                            case \"end\":\n                              return _context7.stop();\n                          }\n                        }\n                      }, null, null, null, Promise);\n                    }\n                  })\n                }), _jsx(Button, {\n                  icon: _jsx(Icon, {\n                    name: \"thumbs-o-down\",\n                    size: 15,\n                    color: \"white\",\n                    onPress: function _callee8() {\n                      return _regeneratorRuntime.async(function _callee8$(_context8) {\n                        while (1) {\n                          switch (_context8.prev = _context8.next) {\n                            case 0:\n                              _this3.sendDislike(item.post_id);\n\n                            case 1:\n                            case \"end\":\n                              return _context8.stop();\n                          }\n                        }\n                      }, null, null, null, Promise);\n                    }\n                  })\n                }), _jsxs(View, {\n                  style: styles.rightButtons,\n                  children: [_jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"edit\",\n                      size: 15,\n                      color: \"white\"\n                    })\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"eye\",\n                      size: 15,\n                      color: \"white\"\n                    }),\n                    onPress: function onPress() {\n                      navigation.navigate('singlePost');\n                    }\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"trash\",\n                      size: 15,\n                      color: \"red\"\n                    }),\n                    onPress: function onPress() {\n                      _this3.deletePost(item.post_id);\n                    }\n                  })]\n                })]\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998'\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  postContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 230\n  },\n  profileImg: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30\n  },\n  position: {\n    bottom: 200\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170\n  },\n  buttonOpen: {\n    backgroundColor: '#8b9dc3'\n  },\n  buttonClose: {\n    backgroundColor: '#8b9dc3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  input: {\n    height: 400,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/homeScreen.js"],"names":["React","Component","AsyncStorage","Icon","Button","HomeScreen","props","setModalVisible","visible","setState","modalVisible","sendPost","navigation","state","getItem","token","userId","post","text","userInput","fetch","method","headers","body","JSON","stringify","then","response","status","getPost","console","log","navigate","userID","json","responseJson","listData","catch","error","getFriendPost","sendLike","postId","sendDislike","deletePost","unsubscribe","addListener","styles","centeredView","modalView","input","button","buttonClose","textStyle","buttonOpen","item","postContainer","profileImg","require","nameTxt","author","first_name","last_name","contentSection","buttonContainer","numLikes","post_id","rightButtons","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","flexDirection","borderRadius","height","width","marginTop","borderWidth","marginLeft","resizeMode","alignSelf","position","bottom","fontWeight","textAlign","textDecorationLine","margin","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","modalText","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  Pressable,\n  Modal,\n  TextInput,\n  FlatList,\n  Image,\n} from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Button } from 'react-native-elements';\n\nclass HomeScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalVisible: false,\n      userInput: '',\n      listData: '',\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.props.navigation.addListener('focus', () => {\n      this.getPost();\n      this.getFriendPost();\n    });\n  }\n\n  setModalVisible = (visible) => {\n    this.setState({ modalVisible: visible });\n  };\n\n  sendPost = async () => {\n    const { navigation } = this.props;\n    const { modalVisible } = this.state;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    const post = { text: this.state.userInput };\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/post`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Authorization': token,\n      },\n\n      body: JSON.stringify(post),\n    }).then((response) => {\n      if (response.status === 201) {\n        this.setModalVisible(!modalVisible);\n        this.getPost();\n      }\n      if (response.status === 400) {\n        console.log('Bad Request');\n      } else if (response.status === 401) {\n        navigation.navigate('login');\n      } else {\n        throw 'Something went wrong';\n      }\n    });\n  };\n\n  getPost = async () => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userID = await AsyncStorage.getItem('@user_id');\n    return fetch(`http://localhost:3333/api/1.0.0/user/${userID}/post`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 400) {\n          console.log('Bad Request');\n        } else if (response.status === 401) {\n          navigation.navigate('login');\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .then((responseJson) => {\n        this.setState({\n          listData: responseJson,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  getFriendPost = async () => {};\n\n  sendLike = async (postId) => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    fetch(\n      `http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}/like`,\n      {\n        method: 'POST',\n        headers: {\n          'X-Authorization': token,\n        },\n      }\n    ).then((response) => {\n      if (response.status === 200) {\n        this.getPost();\n      }\n      if (response.status === 400) {\n        console.log('Bad Request');\n      } else if (response.status === 401) {\n        navigation.navigate('login');\n      } else {\n        throw 'Something went wrong';\n      }\n    });\n  };\n\n  sendDislike = async (postId) => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    fetch(\n      `http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}/like`,\n      {\n        method: 'DELETE',\n        headers: {\n          'X-Authorization': token,\n        },\n      }\n    ).then((response) => {\n      if (response.status === 200) {\n        navigation.navigate('home');\n      }\n      if (response.status === 400) {\n        console.log('Bad Request');\n      } else if (response.status === 401) {\n        navigation.navigate('login');\n      } else {\n        throw 'Something went wrong';\n      }\n    });\n  };\n\n  deletePost = async (postId) => {\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    const { navigation } = this.props;\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}`, {\n      method: 'DELETE',\n      headers: {\n        'X-Authorization': token,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        this.getPost();\n      }\n      if (response.status === 400) {\n        console.log('Bad Request');\n      } else if (response.status === 401) {\n        navigation.navigate('login');\n      } else {\n        throw 'Something went wrong';\n      }\n    });\n  };\n\n  render() {\n    const { modalVisible, userInput, listData } = this.state;\n    const { navigation } = this.props;\n    return (\n      <View style={styles.centeredView}>\n        <Modal\n          animationType=\"slide\"\n          visible={modalVisible}\n          onRequestClose={() => {\n            this.setModalVisible(!modalVisible);\n          }}\n        >\n          <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n              <TextInput\n                placeholder=\"Whats on your mind...\"\n                onChangeText={(userInput) => this.setState({ userInput })}\n                value={userInput}\n                style={styles.input}\n              />\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => this.sendPost()}\n              >\n                <Text style={styles.textStyle}>Post</Text>\n              </Pressable>\n\n              <Pressable\n                style={[styles.button, styles.buttonClose]}\n                onPress={() => this.setModalVisible(!modalVisible)}\n              >\n                <Text style={styles.textStyle}>Close</Text>\n              </Pressable>\n            </View>\n          </View>\n        </Modal>\n        <Button\n          style={[styles.button, styles.buttonOpen]}\n          onPress={() => this.setModalVisible(true)}\n        >\n          <Text style={styles.textStyle}>Create post</Text>\n        </Button>\n        <FlatList\n          data={listData}\n          renderItem={({ item }) => (\n            <View style={styles.postContainer}>\n              <Image\n                style={styles.profileImg}\n                source={require('../assets/nopic.png')}\n              />\n              <Text style={styles.nameTxt}>\n                {item.author.first_name} {item.author.last_name}\n              </Text>\n              <Text style={styles.contentSection}> {item.text} </Text>\n              <View style={styles.buttonContainer}>\n                <Text> {item.numLikes} </Text>\n                <Button\n                  icon={\n                    <Icon\n                      name=\"thumbs-o-up\"\n                      size={15}\n                      color=\"white\"\n                      onPress={async () => {\n                        this.sendLike(item.post_id);\n                      }}\n                    />\n                  }\n                />\n                <Button\n                  icon={\n                    <Icon\n                      name=\"thumbs-o-down\"\n                      size={15}\n                      color=\"white\"\n                      onPress={async () => {\n                        this.sendDislike(item.post_id);\n                      }}\n                    />\n                  }\n                />\n                <View style={styles.rightButtons}>\n                  <Button icon={<Icon name=\"edit\" size={15} color=\"white\" />} />\n                  <Button\n                    icon={<Icon name=\"eye\" size={15} color=\"white\" />}\n                    onPress={() => {\n                      navigation.navigate('singlePost');\n                    }}\n                  />\n                  <Button\n                    icon={<Icon name=\"trash\" size={15} color=\"red\" />}\n                    onPress={() => {\n                      this.deletePost(item.post_id);\n                    }}\n                  />\n                </View>\n              </View>\n            </View>\n          )}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n  },\n  postContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2,\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 230,\n  },\n  profileImg: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30,\n  },\n  position: {\n    bottom: 200,\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline',\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170,\n  },\n  buttonOpen: {\n    backgroundColor: '#8b9dc3',\n  },\n  buttonClose: {\n    backgroundColor: '#8b9dc3',\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  input: {\n    height: 400,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15,\n  },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}