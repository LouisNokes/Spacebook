{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport login from \"./screens/LoginScreen\";\nimport signup from \"./screens/SignupScreen\";\nimport homescreen from \"./screens/HomeScreen\";\nimport profileScreen from \"./screens/ProfileScreen\";\nimport settingscreen from \"./screens/SettingScreen\";\nimport messageScreen from \"./screens/MessageScreen\";\nimport FriendsList from \"./screens/FriendsList\";\nimport EditProfile from \"./screens/EditProfile\";\nimport addFriend from \"./screens/addFriend\";\nimport FriendRequest from \"./screens/friendRequestScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction Home() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Home\",\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: homescreen\n      }), _jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: settingscreen\n      })]\n    })\n  });\n}\n\nfunction MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"login\",\n        component: login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"signup\",\n        component: signup,\n        options: {\n          title: 'Sign up',\n          headerTitleAlign: 'center'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"edit\",\n        component: EditProfile,\n        options: {\n          title: 'Edit',\n          headerTitleAlign: 'center'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"add\",\n        component: addFriend,\n        options: {\n          title: 'Add Friend',\n          headerTitleAlign: 'center'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"request\",\n        component: FriendRequest,\n        options: {\n          title: 'Friend Request',\n          headerTitleAlign: 'center'\n        }\n      })]\n    })\n  });\n}\n\nexport default MyStack;\nvar styles = StyleSheet.create({\n  image: {\n    width: 25,\n    height: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","login","signup","homescreen","profileScreen","settingscreen","messageScreen","FriendsList","EditProfile","addFriend","FriendRequest","Stack","Tab","Home","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","MyStack","headerShown","title","headerTitleAlign","styles","StyleSheet","create","image","width","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Text, View, Image, StyleSheet } from 'react-native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport login from './screens/LoginScreen';\r\nimport signup from './screens/SignupScreen';\r\nimport homescreen from './screens/HomeScreen';\r\nimport profileScreen from './screens/ProfileScreen';\r\nimport settingscreen from './screens/SettingScreen';\r\nimport messageScreen from './screens/MessageScreen';\r\nimport FriendsList from './screens/FriendsList';\r\nimport EditProfile from './screens/EditProfile';\r\nimport addFriend from './screens/addFriend';\r\nimport FriendRequest from './screens/friendRequestScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction Home() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        initialRouteName=\"Home\"\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            if (route.name === 'Home') {\r\n              iconName = focused\r\n                ? 'ios-information-circle'\r\n                : 'ios-information-circle-outline';\r\n            } else if (route.name === 'Settings') {\r\n              iconName = focused ? 'ios-list-box' : 'ios-list';\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: 'tomato',\r\n          tabBarInactiveTintColor: 'gray',\r\n        })}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={homescreen} />\r\n        <Tab.Screen name=\"Settings\" component={settingscreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction MyStack() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"login\"\r\n          component={login}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"signup\"\r\n          component={signup}\r\n          options={{ title: 'Sign up', headerTitleAlign: 'center' }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"home\"\r\n          component={Home}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"edit\"\r\n          component={EditProfile}\r\n          options={{ title: 'Edit', headerTitleAlign: 'center' }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"add\"\r\n          component={addFriend}\r\n          options={{ title: 'Add Friend', headerTitleAlign: 'center' }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"request\"\r\n          component={FriendRequest}\r\n          options={{ title: 'Friend Request', headerTitleAlign: 'center' }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MyStack;\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}