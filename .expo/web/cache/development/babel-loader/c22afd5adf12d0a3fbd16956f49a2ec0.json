{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport homescreen from \"./screens/HomeScreen\";\nimport profileScreen from \"./screens/ProfileScreen\";\nimport settingscreen from \"./screens/SettingScreen\";\nimport messageScreen from \"./screens/MessageScreen\";\nimport FriendsList from \"./screens/FriendsList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar TabNav = function (_Component) {\n  _inherits(TabNav, _Component);\n\n  var _super = _createSuper(TabNav);\n\n  function TabNav() {\n    _classCallCheck(this, TabNav);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabNav, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(Tab.Navigator, {\n        tabBarOptions: {\n          showLabel: false\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: homescreen,\n          options: {\n            headerShown: true,\n            headerTitle: function headerTitle() {\n              return _jsx(Image, {\n                style: {\n                  width: 200,\n                  height: 60\n                },\n                source: require(\"../assets/logo.png\")\n              });\n            },\n            tabBarIcon: function tabBarIcon(_ref) {\n              var focused = _ref.focused;\n              return _jsxs(View, {\n                children: [_jsx(Image, {\n                  source: require(\"../assets/home.png\"),\n                  resizeMode: \"contain\",\n                  style: styles.image\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? '#660094' : '#748c94',\n                    fontSize: 10\n                  },\n                  children: \"Home\"\n                })]\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Profile\",\n          component: profileScreen,\n          options: {\n            headerShown: false,\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused;\n              return _jsxs(View, {\n                children: [_jsx(Image, {\n                  source: require(\"../assets/user.png\"),\n                  resizeMode: \"contain\",\n                  style: styles.image\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? '#660094' : '#748c94',\n                    fontSize: 10\n                  },\n                  children: \"Profile\"\n                })]\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Messages\",\n          component: messageScreen,\n          options: {\n            title: 'Messages',\n            headerTitleAlign: 'center',\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var focused = _ref3.focused;\n              return _jsxs(View, {\n                children: [_jsx(Image, {\n                  source: require(\"../assets/message.png\"),\n                  resizeMode: \"contain\",\n                  style: styles.image\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? '#660094' : '#748c94',\n                    fontSize: 10\n                  },\n                  children: \"Messages\"\n                })]\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Friends\",\n          component: FriendsList,\n          options: {\n            title: 'Friends',\n            headerTitleAlign: 'center',\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var focused = _ref4.focused;\n              return _jsxs(View, {\n                children: [_jsx(Image, {\n                  source: require(\"../assets/friends.png\"),\n                  resizeMode: \"contain\",\n                  style: styles.image\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? '#660094' : '#748c94',\n                    fontSize: 10\n                  },\n                  children: \"Friends\"\n                })]\n              });\n            }\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Settings\",\n          component: settingscreen,\n          options: {\n            headerShown: false,\n            tabBarIcon: function tabBarIcon(_ref5) {\n              var focused = _ref5.focused;\n              return _jsxs(View, {\n                children: [_jsx(Image, {\n                  source: require(\"../assets/settings.png\"),\n                  resizeMode: \"contain\",\n                  style: styles.image\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? '#660094' : '#748c94',\n                    fontSize: 10\n                  },\n                  children: \"Settings\"\n                })]\n              });\n            }\n          }\n        })]\n      });\n    }\n  }]);\n\n  return TabNav;\n}(Component);\n\nexport default TabNav;\nvar styles = StyleSheet.create({\n  image: {\n    width: 25,\n    height: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/TabNav.js"],"names":["React","Component","createBottomTabNavigator","homescreen","profileScreen","settingscreen","messageScreen","FriendsList","Tab","TabNav","showLabel","headerShown","headerTitle","width","height","require","tabBarIcon","focused","styles","image","color","fontSize","title","headerTitleAlign","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Text, View, Image, StyleSheet } from 'react-native';\r\n\r\nimport homescreen from './screens/HomeScreen';\r\nimport profileScreen from './screens/ProfileScreen';\r\nimport settingscreen from './screens/SettingScreen';\r\nimport messageScreen from './screens/MessageScreen';\r\nimport FriendsList from './screens/FriendsList';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nclass TabNav extends Component {\r\n  render() {\r\n    return (\r\n      <Tab.Navigator\r\n        tabBarOptions={{\r\n          showLabel: false,\r\n        }}\r\n      >\r\n        <Tab.Screen\r\n          name=\"Home\"\r\n          component={homescreen}\r\n          options={{\r\n            headerShown: true,\r\n\r\n            headerTitle: () => (\r\n              <Image\r\n                style={{\r\n                  width: 200,\r\n                  height: 60,\r\n                }}\r\n                source={require('../assets/logo.png')}\r\n              />\r\n            ),\r\n            tabBarIcon: ({ focused }) => (\r\n              <View>\r\n                <Image\r\n                  source={require('../assets/home.png')}\r\n                  resizeMode=\"contain\"\r\n                  style={styles.image}\r\n                />\r\n                <Text\r\n                  style={{\r\n                    color: focused ? '#660094' : '#748c94',\r\n                    fontSize: 10,\r\n                  }}\r\n                >\r\n                  Home\r\n                </Text>\r\n              </View>\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Profile\"\r\n          component={profileScreen}\r\n          options={{\r\n            headerShown: false,\r\n            tabBarIcon: ({ focused }) => (\r\n              <View>\r\n                <Image\r\n                  source={require('../assets/user.png')}\r\n                  resizeMode=\"contain\"\r\n                  style={styles.image}\r\n                />\r\n                <Text\r\n                  style={{\r\n                    color: focused ? '#660094' : '#748c94',\r\n                    fontSize: 10,\r\n                  }}\r\n                >\r\n                  Profile\r\n                </Text>\r\n              </View>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <Tab.Screen\r\n          name=\"Messages\"\r\n          component={messageScreen}\r\n          options={{\r\n            title: 'Messages',\r\n            headerTitleAlign: 'center',\r\n            tabBarIcon: ({ focused }) => (\r\n              <View>\r\n                <Image\r\n                  source={require('../assets/message.png')}\r\n                  resizeMode=\"contain\"\r\n                  style={styles.image}\r\n                />\r\n                <Text\r\n                  style={{\r\n                    color: focused ? '#660094' : '#748c94',\r\n                    fontSize: 10,\r\n                  }}\r\n                >\r\n                  Messages\r\n                </Text>\r\n              </View>\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Friends\"\r\n          component={FriendsList}\r\n          options={{\r\n            title: 'Friends',\r\n            headerTitleAlign: 'center',\r\n            tabBarIcon: ({ focused }) => (\r\n              <View>\r\n                <Image\r\n                  source={require('../assets/friends.png')}\r\n                  resizeMode=\"contain\"\r\n                  style={styles.image}\r\n                />\r\n                <Text\r\n                  style={{\r\n                    color: focused ? '#660094' : '#748c94',\r\n                    fontSize: 10,\r\n                  }}\r\n                >\r\n                  Friends\r\n                </Text>\r\n              </View>\r\n            ),\r\n          }}\r\n        />\r\n        <Tab.Screen\r\n          name=\"Settings\"\r\n          component={settingscreen}\r\n          options={{\r\n            headerShown: false,\r\n            tabBarIcon: ({ focused }) => (\r\n              <View>\r\n                <Image\r\n                  source={require('../assets/settings.png')}\r\n                  resizeMode=\"contain\"\r\n                  style={styles.image}\r\n                />\r\n                <Text\r\n                  style={{\r\n                    color: focused ? '#660094' : '#748c94',\r\n                    fontSize: 10,\r\n                  }}\r\n                >\r\n                  Settings\r\n                </Text>\r\n              </View>\r\n            ),\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabNav;\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}