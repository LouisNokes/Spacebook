{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProfileScreen = function (_Component) {\n  _inherits(ProfileScreen, _Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileScreen);\n\n    _this = _super.call(this, props);\n\n    _this.checkLoggedIn = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              value = _context.sent;\n\n              if (value !== null) {\n                _this.setState({\n                  token: value\n                });\n              } else {\n                _this.props.navigation.navigate(\"login\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getProfileData = function _callee2() {\n      var token, uID;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              uID = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://10.0.2.2:3333/api/1.0.0/user/\" + uID, {\n                method: 'get',\n                headers: {\n                  \"X-Authorization\": token,\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                } else if (response.status === 401) {\n                  Alert.alert(\"nope\");\n                } else if (response.status === 404) {\n                  Alert.alert(\"m\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n                ToastAndroid.show(error, ToastAndroid.SHORT);\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                _this.setState({\n                  user_id: responseJson.user_id,\n                  first_name: responseJson.first_name,\n                  last_name: responseJson.last_name,\n                  friend_count: responseJson.friend_count\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      friend_count: '',\n      user_id: '',\n      token: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProfileData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: 50\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: 'https://reactjs.org/logo-og.png'\n          },\n          style: styles.profileImg\n        }), _jsxs(Text, {\n          style: styles.txt,\n          children: [this.state.first_name, \" \", this.state.last_name]\n        }), _jsxs(Text, {\n          style: styles.txt,\n          children: [\"Friends: \", this.state.friend_count]\n        }), _jsx(Button, {\n          title: \"Edit Profile\"\n        })]\n      });\n    }\n  }]);\n\n  return ProfileScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  profileImg: {\n    width: 100,\n    height: 100,\n    borderRadius: 80,\n    borderColor: \"black\",\n    borderWidth: 1\n  },\n  txt: {\n    fontWeight: \"bold\",\n    color: \"black\",\n    margin: 2\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/ProfileScreen.js"],"names":["AsyncStorage","React","Component","ProfileScreen","props","checkLoggedIn","getItem","value","setState","token","navigation","navigate","getProfileData","uID","fetch","method","headers","then","response","status","json","Alert","alert","catch","error","console","log","ToastAndroid","show","SHORT","responseJson","user_id","first_name","last_name","friend_count","state","justifyContent","alignItems","margin","uri","styles","profileImg","txt","StyleSheet","create","width","height","borderRadius","borderColor","borderWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, {Component} from 'react';\nimport {Text, View, Button, ToastAndroid, Alert, Image, StyleSheet} from 'react-native';\n\nclass ProfileScreen extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            first_name: '',\n            last_name: '',\n            friend_count: '',\n            user_id: '',\n            token: ''\n        };\n        //this.showData();\n    }\n\n    componentDidMount() {\n        this.getProfileData();\n\n    }\n    checkLoggedIn = async () => {\n        const value = await AsyncStorage.getItem('@session_token');\n        if (value !== null) {\n            this.setState({ token: value });\n        } else {\n            this.props.navigation.navigate(\"login\");\n        }\n    }\n\n    getProfileData = async () => {\n        let token = await AsyncStorage.getItem('@session_token');\n        let uID = await AsyncStorage.getItem('@user_id');\n\n        return fetch(\"http://10.0.2.2:3333/api/1.0.0/user/\" + uID, {\n            method: 'get',\n            headers: {\n                \"X-Authorization\": token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then((response) => {\n                if (response.status === 200) {\n                    return response.json()\n                } else if (response.status === 401) {\n                    Alert.alert(\"nope\");\n                } else if (response.status === 404) {\n                    Alert.alert(\"m\");\n                }\n            }).catch((error) => {\n                console.log(error);\n                ToastAndroid.show(error, ToastAndroid.SHORT);\n            }).then((responseJson) => {\n                console.log(responseJson);\n                this.setState({\n                    user_id: responseJson.user_id,\n                    first_name: responseJson.first_name,\n                    last_name: responseJson.last_name,\n                    friend_count: responseJson.friend_count\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n    render() {\n        return (\n            <View style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                margin: 50\n            }}>\n                <Image source={{ uri: 'https://reactjs.org/logo-og.png' }}\n                    style={styles.profileImg} />\n\n\n                <Text style={styles.txt}>{this.state.first_name} {this.state.last_name}</Text>\n                <Text style={styles.txt}>Friends: {this.state.friend_count}</Text>\n                <Button title=\"Edit Profile\" />\n            </View >\n        );\n    }\n\n}\nconst styles = StyleSheet.create({\n    profileImg: {\n        width: 100,\n        height: 100,\n        borderRadius: 80,\n        borderColor: \"black\",\n        borderWidth: 1,\n\n    },\n    txt: {\n        fontWeight: \"bold\",\n        color: \"black\",\n        margin: 2\n    }\n});\n\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}