{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProfileScreen = function (_Component) {\n  _inherits(ProfileScreen, _Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileScreen);\n\n    _this = _super.call(this, props);\n\n    _this.viewPost = function (postId) {\n      var navigation = _this.props.navigation;\n      navigation.navigate('viewPost', {\n        postID: postId\n      });\n    };\n\n    _this.editPost = function (postId) {\n      var navigation = _this.props.navigation;\n      navigation.navigate('editPost', {\n        postID: postId\n      });\n    };\n\n    _this.checkLoggedIn = function _callee() {\n      var navigation, token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context.sent;\n\n              if (token == null) {\n                navigation.navigate('login');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.get_profile_image = function _callee2() {\n      var token, userId;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              userId = _context2.sent;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/photo\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (res) {\n                return res.blob();\n              }).then(function (resBlob) {\n                var data = URL.createObjectURL(resBlob);\n\n                _this.setState({\n                  photo: data,\n                  isLoading: false\n                });\n              }).catch(function (err) {\n                console.log('error', err);\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendPost = function _callee3() {\n      var navigation, userInput, token, userId, post;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              userInput = _this.state.userInput;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context3.sent;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 7:\n              userId = _context3.sent;\n              post = {\n                text: userInput\n              };\n\n              if (post === '') {}\n\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'X-Authorization': token\n                },\n                body: JSON.stringify(post)\n              }).then(function (response) {\n                if (response.status === 201) {\n                  _this.getPost();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 404) {\n                  throw new Error('Not found');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPost = function _callee4() {\n      var navigation, token, userID;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context4.sent;\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userID = _context4.sent;\n              return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('Can only view the post of yourself of your friends');\n                }\n\n                throw 'Something went wrong';\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.deletePost = function _callee5(postId) {\n      var token, userId, navigation;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this.createTwoButtonAlert();\n\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context5.sent;\n              _context5.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userId = _context5.sent;\n              navigation = _this.props.navigation;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId, {\n                method: 'DELETE',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getPost();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 403) {\n                  throw new Error('You can only delete your own post');\n                }\n\n                throw 'Something went wrong';\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getProfileData = function _callee6() {\n      var token, userId, navigation;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context6.sent;\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              userId = _context6.sent;\n              navigation = _this.props.navigation;\n              return _context6.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId, {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token,\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                } else if (response.status === 404) {\n                  throw new Error('Not found');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                _this.setState({\n                  firstName: responseJson.first_name,\n                  lastName: responseJson.last_name\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      photo: null,\n      isLoading: true,\n      listData: [],\n      userInput: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      this.unsubscribe = navigation.addListener('focus', function () {\n        _this2.checkLoggedIn();\n\n        _this2.getPost();\n\n        _this2.getProfileData();\n\n        _this2.get_profile_image();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          listData = _this$state.listData,\n          userInput = _this$state.userInput,\n          photo = _this$state.photo;\n      var navigation = this.props.navigation;\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(ScrollView, {\n          style: styles.backgrd,\n          children: [_jsx(Image, {\n            source: photo,\n            style: styles.profileImg\n          }), _jsxs(Text, {\n            style: styles.txtName,\n            children: [firstName, \" \", lastName]\n          }), _jsx(TouchableOpacity, {\n            style: styles.editbtn,\n            onPress: function onPress() {\n              navigation.navigate('edit');\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Upload Picture\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.editbtn,\n            onPress: function onPress() {\n              navigation.navigate();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Drafts\"\n            })\n          }), _jsx(TextInput, {\n            placeholder: \"Whats on your mind...\",\n            onChangeText: function onChangeText(userInput) {\n              return _this3.setState({\n                userInput: userInput\n              });\n            },\n            value: userInput,\n            style: styles.input\n          }), _jsx(TouchableOpacity, {\n            style: styles.editbtn,\n            onPress: function onPress() {\n              _this3.sendPost();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Post\"\n            })\n          }), _jsx(FlatList, {\n            data: listData,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                style: styles.postContainer,\n                children: [_jsx(Image, {\n                  style: styles.profileImgCont,\n                  source: photo\n                }), _jsxs(Text, {\n                  style: styles.nameTxt,\n                  children: [item.author.first_name, \" \", item.author.last_name]\n                }), _jsxs(Text, {\n                  style: styles.contentSection,\n                  children: [\" \", item.text, \" \"]\n                }), _jsxs(Text, {\n                  children: [\" Likes: \", item.numLikes, \" \"]\n                }), _jsxs(View, {\n                  style: styles.rightButtons,\n                  children: [_jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"edit\",\n                      size: 15,\n                      color: \"white\"\n                    }),\n                    onPress: function onPress() {\n                      _this3.editPost(item.post_id);\n                    }\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"eye\",\n                      size: 15,\n                      color: \"white\"\n                    }),\n                    onPress: function onPress() {\n                      _this3.viewPost(item.post_id);\n                    }\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"trash\",\n                      size: 15,\n                      color: \"red\"\n                    }),\n                    onPress: function onPress() {\n                      _this3.deletePost(item.post_id);\n                    }\n                  })]\n                })]\n              });\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return ProfileScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998'\n  },\n  profileImg: {\n    alignSelf: 'center',\n    height: 100,\n    width: 100,\n    borderWidth: 1,\n    borderRadius: 75,\n    marginTop: 20\n  },\n  txt: {\n    alignSelf: 'center',\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2\n  },\n  txtName: {\n    alignSelf: 'center',\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 20\n  },\n  editbtn: {\n    alignItems: 'center',\n    backgroundColor: '#8b9dc3',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 2\n  },\n  backgrd: {\n    backgroundColor: '#3b5998'\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 300\n  },\n  profileImgCont: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30,\n    borderRadius: 75,\n    marginTop: 4\n  },\n  position: {\n    bottom: 200\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: 'white'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/profileScreen.js"],"names":["AsyncStorage","React","Component","Icon","Button","ProfileScreen","props","viewPost","postId","navigation","navigate","postID","editPost","checkLoggedIn","getItem","token","get_profile_image","userId","fetch","method","headers","then","res","blob","resBlob","data","URL","createObjectURL","setState","photo","isLoading","catch","err","console","log","sendPost","userInput","state","post","text","body","JSON","stringify","response","status","getPost","Error","userID","json","responseJson","listData","error","deletePost","createTwoButtonAlert","getProfileData","firstName","first_name","lastName","last_name","unsubscribe","addListener","styles","centeredView","backgrd","profileImg","txtName","editbtn","color","input","item","postContainer","profileImgCont","nameTxt","author","contentSection","numLikes","rightButtons","post_id","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","alignSelf","height","width","borderWidth","borderRadius","marginTop","txt","fontWeight","margin","fontSize","padding","buttonContainer","flexDirection","marginLeft","resizeMode","position","bottom","textAlign","textDecorationLine","button","elevation","textStyle","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAWA,OAAOC,IAAP;AACA,SAASC,MAAT,QAAuB,uBAAvB;;;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA2BnBC,QA3BmB,GA2BR,UAACC,MAAD,EAAY;AACrB,UAAQC,UAAR,GAAuB,MAAKH,KAA5B,CAAQG,UAAR;AACAA,MAAAA,UAAU,CAACC,QAAX,CAAoB,UAApB,EAAgC;AAC9BC,QAAAA,MAAM,EAAEH;AADsB,OAAhC;AAGD,KAhCkB;;AAAA,UAkCnBI,QAlCmB,GAkCR,UAACJ,MAAD,EAAY;AACrB,UAAQC,UAAR,GAAuB,MAAKH,KAA5B,CAAQG,UAAR;AACAA,MAAAA,UAAU,CAACC,QAAX,CAAoB,UAApB,EAAgC;AAC9BC,QAAAA,MAAM,EAAEH;AADsB,OAAhC;AAGD,KAvCkB;;AAAA,UAyCnBK,aAzCmB,GAyCH;AAAA;AAAA;AAAA;AAAA;AAAA;AACNJ,cAAAA,UADM,GACS,MAAKH,KADd,CACNG,UADM;AAAA;AAAA,+CAEMT,YAAY,CAACc,OAAb,CAAqB,gBAArB,CAFN;;AAAA;AAERC,cAAAA,KAFQ;;AAGd,kBAAIA,KAAK,IAAI,IAAb,EAAmB;AACjBN,gBAAAA,UAAU,CAACC,QAAX,CAAoB,OAApB;AACD;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzCG;;AAAA,UAiDnBM,iBAjDmB,GAiDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEhB,YAAY,CAACc,OAAb,CAAqB,gBAArB,CADF;;AAAA;AACZC,cAAAA,KADY;AAAA;AAAA,+CAEGf,YAAY,CAACc,OAAb,CAAqB,UAArB,CAFH;;AAAA;AAEZG,cAAAA,MAFY;AAGlBC,cAAAA,KAAK,2CAAyCD,MAAzC,aAAyD;AAC5DE,gBAAAA,MAAM,EAAE,KADoD;AAE5DC,gBAAAA,OAAO,EAAE;AACP,qCAAmBL;AADZ;AAFmD,eAAzD,CAAL,CAMGM,IANH,CAMQ,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,eANR,EAOGF,IAPH,CAOQ,UAACG,OAAD,EAAa;AACjB,oBAAMC,IAAI,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,OAApB,CAAb;;AACA,sBAAKI,QAAL,CAAc;AACZC,kBAAAA,KAAK,EAAEJ,IADK;AAEZK,kBAAAA,SAAS,EAAE;AAFC,iBAAd;AAID,eAbH,EAcGC,KAdH,CAcS,UAACC,GAAD,EAAS;AACdC,gBAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD,eAhBH;;AAHkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjDD;;AAAA,UAuEnBG,QAvEmB,GAuER;AAAA;AAAA;AAAA;AAAA;AAAA;AACD1B,cAAAA,UADC,GACc,MAAKH,KADnB,CACDG,UADC;AAED2B,cAAAA,SAFC,GAEa,MAAKC,KAFlB,CAEDD,SAFC;AAAA;AAAA,+CAGWpC,YAAY,CAACc,OAAb,CAAqB,gBAArB,CAHX;;AAAA;AAGHC,cAAAA,KAHG;AAAA;AAAA,+CAIYf,YAAY,CAACc,OAAb,CAAqB,UAArB,CAJZ;;AAAA;AAIHG,cAAAA,MAJG;AAKHqB,cAAAA,IALG,GAKI;AAAEC,gBAAAA,IAAI,EAAEH;AAAR,eALJ;;AAOT,kBAAIE,IAAI,KAAK,EAAb,EAAiB,CAChB;;AAEDpB,cAAAA,KAAK,2CAAyCD,MAAzC,YAAwD;AAC3DE,gBAAAA,MAAM,EAAE,MADmD;AAE3DC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,qCAAmBL;AAFZ,iBAFkD;AAM3DyB,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANqD,eAAxD,CAAL,CAOGjB,IAPH,CAOQ,UAACsB,QAAD,EAAc;AACpB,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAKC,OAAL;AACD;;AACD,oBAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BnC,kBAAAA,UAAU,CAACC,QAAX,CAAoB,OAApB;AACD,iBAFD,MAEO,IAAIiC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,wBAAM,IAAIE,KAAJ,CAAU,WAAV,CAAN;AACD,iBAFM,MAEA;AACL,wBAAM,sBAAN;AACD;AACF,eAlBD;;AAVS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvEQ;;AAAA,UAsGnBD,OAtGmB,GAsGT;AAAA;AAAA;AAAA;AAAA;AAAA;AACApC,cAAAA,UADA,GACe,MAAKH,KADpB,CACAG,UADA;AAAA;AAAA,+CAEYT,YAAY,CAACc,OAAb,CAAqB,gBAArB,CAFZ;;AAAA;AAEFC,cAAAA,KAFE;AAAA;AAAA,+CAGaf,YAAY,CAACc,OAAb,CAAqB,UAArB,CAHb;;AAAA;AAGFiC,cAAAA,MAHE;AAAA,gDAID7B,KAAK,2CAAyC6B,MAAzC,YAAwD;AAClE5B,gBAAAA,MAAM,EAAE,KAD0D;AAElEC,gBAAAA,OAAO,EAAE;AACP,qCAAmBL;AADZ;AAFyD,eAAxD,CAAL,CAMJM,IANI,CAMC,UAACsB,QAAD,EAAc;AAClB,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,yBAAOD,QAAQ,CAACK,IAAT,EAAP;AACD;;AACD,oBAAIL,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BnC,kBAAAA,UAAU,CAACC,QAAX,CAAoB,OAApB;AACD,iBAFD,MAEO,IAAIiC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,wBAAM,IAAIE,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,sBAAM,sBAAN;AACD,eAhBI,EAiBJzB,IAjBI,CAiBC,UAAC4B,YAAD,EAAkB;AACtB,sBAAKrB,QAAL,CAAc;AACZsB,kBAAAA,QAAQ,EAAED;AADE,iBAAd;AAGD,eArBI,EAsBJlB,KAtBI,CAsBE,UAACoB,KAAD,EAAW;AAChBlB,gBAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD,eAxBI,CAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtGS;;AAAA,UAqInBC,UArImB,GAqIN,kBAAO5C,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,oBAAK6C,oBAAL;;AADW;AAAA,+CAESrD,YAAY,CAACc,OAAb,CAAqB,gBAArB,CAFT;;AAAA;AAELC,cAAAA,KAFK;AAAA;AAAA,+CAGUf,YAAY,CAACc,OAAb,CAAqB,UAArB,CAHV;;AAAA;AAGLG,cAAAA,MAHK;AAIHR,cAAAA,UAJG,GAIY,MAAKH,KAJjB,CAIHG,UAJG;AAKXS,cAAAA,KAAK,2CAAyCD,MAAzC,cAAwDT,MAAxD,EAAkE;AACrEW,gBAAAA,MAAM,EAAE,QAD6D;AAErEC,gBAAAA,OAAO,EAAE;AACP,qCAAmBL;AADZ;AAF4D,eAAlE,CAAL,CAKGM,IALH,CAKQ,UAACsB,QAAD,EAAc;AACpB,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,wBAAKC,OAAL;AACD;;AACD,oBAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BnC,kBAAAA,UAAU,CAACC,QAAX,CAAoB,OAApB;AACD,iBAFD,MAEO,IAAIiC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,wBAAM,IAAIE,KAAJ,CAAU,mCAAV,CAAN;AACD;;AACD,sBAAM,sBAAN;AACD,eAfD;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArIM;;AAAA,UA4JnBQ,cA5JmB,GA4JF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKtD,YAAY,CAACc,OAAb,CAAqB,gBAArB,CADL;;AAAA;AACTC,cAAAA,KADS;AAAA;AAAA,+CAEMf,YAAY,CAACc,OAAb,CAAqB,UAArB,CAFN;;AAAA;AAETG,cAAAA,MAFS;AAGPR,cAAAA,UAHO,GAGQ,MAAKH,KAHb,CAGPG,UAHO;AAAA,gDAIRS,KAAK,2CAAyCD,MAAzC,EAAmD;AAC7DE,gBAAAA,MAAM,EAAE,KADqD;AAE7DC,gBAAAA,OAAO,EAAE;AACP,qCAAmBL,KADZ;AAEP,kCAAgB;AAFT;AAFoD,eAAnD,CAAL,CAOJM,IAPI,CAOC,UAACsB,QAAD,EAAc;AAClB,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,yBAAOD,QAAQ,CAACK,IAAT,EAAP;AACD;;AACD,oBAAIL,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BnC,kBAAAA,UAAU,CAACC,QAAX,CAAoB,OAApB;AACD,iBAFD,MAEO,IAAIiC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,wBAAM,IAAIE,KAAJ,CAAU,WAAV,CAAN;AACD,iBAFM,MAEA;AACL,wBAAM,sBAAN;AACD;AACF,eAlBI,EAmBJzB,IAnBI,CAmBC,UAAC4B,YAAD,EAAkB;AACtBhB,gBAAAA,OAAO,CAACC,GAAR,CAAYe,YAAZ;;AACA,sBAAKrB,QAAL,CAAc;AACZ2B,kBAAAA,SAAS,EAAEN,YAAY,CAACO,UADZ;AAEZC,kBAAAA,QAAQ,EAAER,YAAY,CAACS;AAFX,iBAAd;AAID,eAzBI,EA0BJ3B,KA1BI,CA0BE,UAACoB,KAAD,EAAW;AAChBlB,gBAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD,eA5BI,CAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5JE;;AAGjB,UAAKd,KAAL,GAAa;AACXkB,MAAAA,SAAS,EAAE,EADA;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGX5B,MAAAA,KAAK,EAAE,IAHI;AAIXC,MAAAA,SAAS,EAAE,IAJA;AAKXoB,MAAAA,QAAQ,EAAE,EALC;AAMXd,MAAAA,SAAS,EAAE;AANA,KAAb;AAHiB;AAWlB;;;;WAED,6BAAoB;AAAA;;AAClB,UAAQ3B,UAAR,GAAuB,KAAKH,KAA5B,CAAQG,UAAR;AACA,WAAKkD,WAAL,GAAmBlD,UAAU,CAACmD,WAAX,CAAuB,OAAvB,EAAgC,YAAM;AACvD,QAAA,MAAI,CAAC/C,aAAL;;AACA,QAAA,MAAI,CAACgC,OAAL;;AACA,QAAA,MAAI,CAACS,cAAL;;AACA,QAAA,MAAI,CAACtC,iBAAL;AACD,OALkB,CAAnB;AAMD;;;WAED,gCAAuB;AACrB,WAAK2C,WAAL;AACD;;;WAsKD,kBAAS;AAAA;;AACP,wBAA4D,KAAKtB,KAAjE;AAAA,UAAQkB,SAAR,eAAQA,SAAR;AAAA,UAAmBE,QAAnB,eAAmBA,QAAnB;AAAA,UAA6BP,QAA7B,eAA6BA,QAA7B;AAAA,UAAuCd,SAAvC,eAAuCA,SAAvC;AAAA,UAAkDP,KAAlD,eAAkDA,KAAlD;AACA,UAAQpB,UAAR,GAAuB,KAAKH,KAA5B,CAAQG,UAAR;AACA,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEoD,MAAM,CAACC,YAApB;AAAA,kBACE,MAAC,UAAD;AAAY,UAAA,KAAK,EAAED,MAAM,CAACE,OAA1B;AAAA,qBACE,KAAC,KAAD;AAAO,YAAA,MAAM,EAAElC,KAAf;AAAsB,YAAA,KAAK,EAAEgC,MAAM,CAACG;AAApC,YADF,EAGE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA,uBACGV,SADH,OACeE,QADf;AAAA,YAHF,EAOE,KAAC,gBAAD;AACE,YAAA,KAAK,EAAEI,MAAM,CAACK,OADhB;AAEE,YAAA,OAAO,EAAE,mBAAM;AACbzD,cAAAA,UAAU,CAACC,QAAX,CAAoB,MAApB;AACD,aAJH;AAAA,sBAME,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEyD,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA;AAAA;AANF,YAPF,EAeE,KAAC,gBAAD;AACE,YAAA,KAAK,EAAEN,MAAM,CAACK,OADhB;AAEE,YAAA,OAAO,EAAE,mBAAM;AACbzD,cAAAA,UAAU,CAACC,QAAX;AACD,aAJH;AAAA,sBAME,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEyD,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA;AAAA;AANF,YAfF,EAuBE,KAAC,SAAD;AACE,YAAA,WAAW,EAAC,uBADd;AAEE,YAAA,YAAY,EAAE,sBAAC/B,SAAD;AAAA,qBAAe,MAAI,CAACR,QAAL,CAAc;AAAEQ,gBAAAA,SAAS,EAATA;AAAF,eAAd,CAAf;AAAA,aAFhB;AAGE,YAAA,KAAK,EAAEA,SAHT;AAIE,YAAA,KAAK,EAAEyB,MAAM,CAACO;AAJhB,YAvBF,EA6BE,KAAC,gBAAD;AACE,YAAA,KAAK,EAAEP,MAAM,CAACK,OADhB;AAEE,YAAA,OAAO,EAAE,mBAAM;AACb,cAAA,MAAI,CAAC/B,QAAL;AACD,aAJH;AAAA,sBAME,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEgC,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA;AAAA;AANF,YA7BF,EAqCE,KAAC,QAAD;AACE,YAAA,IAAI,EAAEjB,QADR;AAEE,YAAA,UAAU,EAAE;AAAA,kBAAGmB,IAAH,QAAGA,IAAH;AAAA,qBACV,MAAC,IAAD;AAAM,gBAAA,KAAK,EAAER,MAAM,CAACS,aAApB;AAAA,2BACE,KAAC,KAAD;AAAO,kBAAA,KAAK,EAAET,MAAM,CAACU,cAArB;AAAqC,kBAAA,MAAM,EAAE1C;AAA7C,kBADF,EAEE,MAAC,IAAD;AAAM,kBAAA,KAAK,EAAEgC,MAAM,CAACW,OAApB;AAAA,6BACGH,IAAI,CAACI,MAAL,CAAYjB,UADf,OAC4Ba,IAAI,CAACI,MAAL,CAAYf,SADxC;AAAA,kBAFF,EAKE,MAAC,IAAD;AAAM,kBAAA,KAAK,EAAEG,MAAM,CAACa,cAApB;AAAA,kCAAsCL,IAAI,CAAC9B,IAA3C;AAAA,kBALF,EAME,MAAC,IAAD;AAAA,yCAAe8B,IAAI,CAACM,QAApB;AAAA,kBANF,EAOE,MAAC,IAAD;AAAM,kBAAA,KAAK,EAAEd,MAAM,CAACe,YAApB;AAAA,6BACE,KAAC,MAAD;AACE,oBAAA,IAAI,EAAE,KAAC,IAAD;AAAM,sBAAA,IAAI,EAAC,MAAX;AAAkB,sBAAA,IAAI,EAAE,EAAxB;AAA4B,sBAAA,KAAK,EAAC;AAAlC,sBADR;AAEE,oBAAA,OAAO,EAAE,mBAAM;AACb,sBAAA,MAAI,CAAChE,QAAL,CAAcyD,IAAI,CAACQ,OAAnB;AACD;AAJH,oBADF,EAOE,KAAC,MAAD;AACE,oBAAA,IAAI,EAAE,KAAC,IAAD;AAAM,sBAAA,IAAI,EAAC,KAAX;AAAiB,sBAAA,IAAI,EAAE,EAAvB;AAA2B,sBAAA,KAAK,EAAC;AAAjC,sBADR;AAEE,oBAAA,OAAO,EAAE,mBAAM;AACb,sBAAA,MAAI,CAACtE,QAAL,CAAc8D,IAAI,CAACQ,OAAnB;AACD;AAJH,oBAPF,EAaE,KAAC,MAAD;AACE,oBAAA,IAAI,EAAE,KAAC,IAAD;AAAM,sBAAA,IAAI,EAAC,OAAX;AAAmB,sBAAA,IAAI,EAAE,EAAzB;AAA6B,sBAAA,KAAK,EAAC;AAAnC,sBADR;AAEE,oBAAA,OAAO,EAAE,mBAAM;AACb,sBAAA,MAAI,CAACzB,UAAL,CAAgBiB,IAAI,CAACQ,OAArB;AACD;AAJH,oBAbF;AAAA,kBAPF;AAAA,gBADU;AAAA;AAFd,YArCF;AAAA;AADF,QADF;AA2ED;;;;EA9QyB3E,S;;AAgR5B,IAAM2D,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,YAAY,EAAE;AACZkB,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,cAAc,EAAE,QAFJ;AAGZC,IAAAA,UAAU,EAAE,QAHA;AAIZC,IAAAA,eAAe,EAAE;AAJL,GADiB;AAO/BnB,EAAAA,UAAU,EAAE;AACVoB,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,MAAM,EAAE,GAFE;AAGVC,IAAAA,KAAK,EAAE,GAHG;AAIVC,IAAAA,WAAW,EAAE,CAJH;AAKVC,IAAAA,YAAY,EAAE,EALJ;AAMVC,IAAAA,SAAS,EAAE;AAND,GAPmB;AAe/BC,EAAAA,GAAG,EAAE;AACHN,IAAAA,SAAS,EAAE,QADR;AAEHO,IAAAA,UAAU,EAAE,MAFT;AAGHxB,IAAAA,KAAK,EAAE,OAHJ;AAIHyB,IAAAA,MAAM,EAAE;AAJL,GAf0B;AAqB/B3B,EAAAA,OAAO,EAAE;AACPmB,IAAAA,SAAS,EAAE,QADJ;AAEPO,IAAAA,UAAU,EAAE,MAFL;AAGPxB,IAAAA,KAAK,EAAE,OAHA;AAIP0B,IAAAA,QAAQ,EAAE;AAJH,GArBsB;AA2B/B3B,EAAAA,OAAO,EAAE;AACPgB,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPK,IAAAA,YAAY,EAAE,EAHP;AAIPM,IAAAA,OAAO,EAAE,EAJF;AAKPF,IAAAA,MAAM,EAAE,CALD;AAMPL,IAAAA,WAAW,EAAE;AANN,GA3BsB;AAmC/BxB,EAAAA,OAAO,EAAE;AACPoB,IAAAA,eAAe,EAAE;AADV,GAnCsB;AAsC/BY,EAAAA,eAAe,EAAE;AACfC,IAAAA,aAAa,EAAE;AADA,GAtCc;AAyC/B1B,EAAAA,aAAa,EAAE;AACbU,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,UAAU,EAAE,QAHC;AAIbC,IAAAA,eAAe,EAAE,OAJJ;AAKbK,IAAAA,YAAY,EAAE,EALD;AAMbH,IAAAA,MAAM,EAAE,GANK;AAObC,IAAAA,KAAK,EAAE,GAPM;AAQbG,IAAAA,SAAS,EAAE,EARE;AASbF,IAAAA,WAAW,EAAE;AATA,GAzCgB;AAoD/BX,EAAAA,YAAY,EAAE;AACZoB,IAAAA,aAAa,EAAE,KADH;AAEZC,IAAAA,UAAU,EAAE;AAFA,GApDiB;AAwD/B1B,EAAAA,cAAc,EAAE;AACd2B,IAAAA,UAAU,EAAE,SADE;AAEdd,IAAAA,SAAS,EAAE,QAFG;AAGdC,IAAAA,MAAM,EAAE,EAHM;AAIdC,IAAAA,KAAK,EAAE,EAJO;AAKdE,IAAAA,YAAY,EAAE,EALA;AAMdC,IAAAA,SAAS,EAAE;AANG,GAxDe;AAgE/BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE;AADA,GAhEqB;AAmE/B5B,EAAAA,OAAO,EAAE;AACPmB,IAAAA,UAAU,EAAE,MADL;AAEPU,IAAAA,SAAS,EAAE,QAFJ;AAGPC,IAAAA,kBAAkB,EAAE;AAHb,GAnEsB;AAwE/BC,EAAAA,MAAM,EAAE;AACNf,IAAAA,YAAY,EAAE,EADR;AAENM,IAAAA,OAAO,EAAE,EAFH;AAGNU,IAAAA,SAAS,EAAE,CAHL;AAINZ,IAAAA,MAAM,EAAE,CAJF;AAKNN,IAAAA,KAAK,EAAE;AALD,GAxEuB;AA+E/BmB,EAAAA,SAAS,EAAE;AACTtC,IAAAA,KAAK,EAAE,OADE;AAETwB,IAAAA,UAAU,EAAE,MAFH;AAGTU,IAAAA,SAAS,EAAE;AAHF,GA/EoB;AAoF/B3B,EAAAA,cAAc,EAAE;AACde,IAAAA,SAAS,EAAE,EADG;AAEdiB,IAAAA,YAAY,EAAE;AAFA,GApFe;AAwF/BtC,EAAAA,KAAK,EAAE;AACLiB,IAAAA,MAAM,EAAE,EADH;AAELO,IAAAA,MAAM,EAAE,EAFH;AAGLL,IAAAA,WAAW,EAAE,CAHR;AAILO,IAAAA,OAAO,EAAE,EAJJ;AAKLX,IAAAA,eAAe,EAAE;AALZ;AAxFwB,CAAlB,CAAf;AAiGA,eAAe9E,aAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  FlatList,\n  ScrollView,\n  TextInput,\n} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Button } from 'react-native-elements';\n\nclass ProfileScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      photo: null,\n      isLoading: true,\n      listData: [],\n      userInput: '',\n    };\n  }\n\n  componentDidMount() {\n    const { navigation } = this.props;\n    this.unsubscribe = navigation.addListener('focus', () => {\n      this.checkLoggedIn();\n      this.getPost();\n      this.getProfileData();\n      this.get_profile_image();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  viewPost = (postId) => {\n    const { navigation } = this.props;\n    navigation.navigate('viewPost', {\n      postID: postId,\n    });\n  };\n\n  editPost = (postId) => {\n    const { navigation } = this.props;\n    navigation.navigate('editPost', {\n      postID: postId,\n    });\n  };\n\n  checkLoggedIn = async () => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    if (token == null) {\n      navigation.navigate('login');\n    }\n  };\n\n  get_profile_image = async () => {\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/photo`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((res) => res.blob())\n      .then((resBlob) => {\n        const data = URL.createObjectURL(resBlob);\n        this.setState({\n          photo: data,\n          isLoading: false,\n        });\n      })\n      .catch((err) => {\n        console.log('error', err);\n      });\n  };\n\n  sendPost = async () => {\n    const { navigation } = this.props;\n    const { userInput } = this.state;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    const post = { text: userInput };\n\n    if (post === '') {\n    }\n\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/post`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Authorization': token,\n      },\n      body: JSON.stringify(post),\n    }).then((response) => {\n      if (response.status === 201) {\n        this.getPost();\n      }\n      if (response.status === 401) {\n        navigation.navigate('login');\n      } else if (response.status === 404) {\n        throw new Error('Not found');\n      } else {\n        throw 'Something went wrong';\n      }\n    });\n  };\n\n  getPost = async () => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userID = await AsyncStorage.getItem('@user_id');\n    return fetch(`http://localhost:3333/api/1.0.0/user/${userID}/post`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 401) {\n          navigation.navigate('login');\n        } else if (response.status === 403) {\n          throw new Error('Can only view the post of yourself of your friends');\n        }\n        throw 'Something went wrong';\n      })\n      .then((responseJson) => {\n        this.setState({\n          listData: responseJson,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  deletePost = async (postId) => {\n    this.createTwoButtonAlert();\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    const { navigation } = this.props;\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}`, {\n      method: 'DELETE',\n      headers: {\n        'X-Authorization': token,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        this.getPost();\n      }\n      if (response.status === 401) {\n        navigation.navigate('login');\n      } else if (response.status === 403) {\n        throw new Error('You can only delete your own post');\n      }\n      throw 'Something went wrong';\n    });\n  };\n\n  getProfileData = async () => {\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    const { navigation } = this.props;\n    return fetch(`http://localhost:3333/api/1.0.0/user/${userId}`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 401) {\n          navigation.navigate('login');\n        } else if (response.status === 404) {\n          throw new Error('Not found');\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n        this.setState({\n          firstName: responseJson.first_name,\n          lastName: responseJson.last_name,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { firstName, lastName, listData, userInput, photo } = this.state;\n    const { navigation } = this.props;\n    return (\n      <View style={styles.centeredView}>\n        <ScrollView style={styles.backgrd}>\n          <Image source={photo} style={styles.profileImg} />\n\n          <Text style={styles.txtName}>\n            {firstName} {lastName}\n          </Text>\n\n          <TouchableOpacity\n            style={styles.editbtn}\n            onPress={() => {\n              navigation.navigate('edit'); // Nav to edit page\n            }}\n          >\n            <Text style={{ color: 'white' }}>Upload Picture</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.editbtn}\n            onPress={() => {\n              navigation.navigate(); // Nav to draft page\n            }}\n          >\n            <Text style={{ color: 'white' }}>Drafts</Text>\n          </TouchableOpacity>\n          <TextInput\n            placeholder=\"Whats on your mind...\"\n            onChangeText={(userInput) => this.setState({ userInput })}\n            value={userInput}\n            style={styles.input}\n          />\n          <TouchableOpacity\n            style={styles.editbtn}\n            onPress={() => {\n              this.sendPost(); // Nav to edit page\n            }}\n          >\n            <Text style={{ color: 'white' }}>Post</Text>\n          </TouchableOpacity>\n          <FlatList\n            data={listData}\n            renderItem={({ item }) => (\n              <View style={styles.postContainer}>\n                <Image style={styles.profileImgCont} source={photo} />\n                <Text style={styles.nameTxt}>\n                  {item.author.first_name} {item.author.last_name}\n                </Text>\n                <Text style={styles.contentSection}> {item.text} </Text>\n                <Text> Likes: {item.numLikes} </Text>\n                <View style={styles.rightButtons}>\n                  <Button\n                    icon={<Icon name=\"edit\" size={15} color=\"white\" />}\n                    onPress={() => {\n                      this.editPost(item.post_id);\n                    }}\n                  />\n                  <Button\n                    icon={<Icon name=\"eye\" size={15} color=\"white\" />}\n                    onPress={() => {\n                      this.viewPost(item.post_id);\n                    }}\n                  />\n                  <Button\n                    icon={<Icon name=\"trash\" size={15} color=\"red\" />}\n                    onPress={() => {\n                      this.deletePost(item.post_id);\n                    }}\n                  />\n                </View>\n              </View>\n            )}\n          />\n        </ScrollView>\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998',\n  },\n  profileImg: {\n    alignSelf: 'center',\n    height: 100,\n    width: 100,\n    borderWidth: 1,\n    borderRadius: 75,\n    marginTop: 20,\n  },\n  txt: {\n    alignSelf: 'center',\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2,\n  },\n  txtName: {\n    alignSelf: 'center',\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 20,\n  },\n  editbtn: {\n    alignItems: 'center',\n    backgroundColor: '#8b9dc3',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 2,\n  },\n  backgrd: {\n    backgroundColor: '#3b5998',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2,\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 300,\n  },\n  profileImgCont: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30,\n    borderRadius: 75,\n    marginTop: 4,\n  },\n  position: {\n    bottom: 200,\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline',\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170,\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n});\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}