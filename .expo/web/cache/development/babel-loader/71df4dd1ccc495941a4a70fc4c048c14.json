{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signup = function (_Component) {\n  _inherits(Signup, _Component);\n\n  var _super = _createSuper(Signup);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _super.call(this, props);\n\n    _this.signup = function () {\n      var userData = {\n        first_name: _this.state.first_name,\n        last_name: _this.state.last_name,\n        email: _this.state.email,\n        password: _this.state.password\n      };\n\n      if (_this.state.first_name === '' || _this.state.last_name === '' || _this.state.email === '' || _this.state.password === '') {\n        ToastAndroid.show(\"Please fill in all fields\", ToastAndroid.SHORT);\n      } else if (_this.state.password.length < 5) {\n        ToastAndroid.show(\"Password is too short\", ToastAndroid.SHORT);\n      } else {\n        return fetch(\"http://10.0.2.2:3333/api/1.0.0/user\", {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userData)\n        }).then(function (response) {\n          if (response.status === 201) {\n            ToastAndroid.show(\"Account created successfully\", ToastAndroid.SHORT);\n          } else if (response.status === 400) {\n            throw 'Failed validation';\n          } else if (response.status === 500) {\n            throw 'Server error';\n          } else {\n            throw 'Something went wrong';\n          }\n        }).then(function (responseJson) {\n          console.log(\"User created with ID: \", responseJson);\n\n          _this.props.navigation.navigate(\"login\");\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(ScrollView, {\n        children: [_jsx(TextInput, {\n          placeholder: \"First Name\",\n          onChangeText: function onChangeText(first_name) {\n            return _this2.setState({\n              first_name: first_name\n            });\n          },\n          value: this.state.first_name,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Last Name\",\n          onChangeText: function onChangeText(last_name) {\n            return _this2.setState({\n              last_name: last_name\n            });\n          },\n          value: this.state.last_name,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Email\",\n          onChangeText: function onChangeText(email) {\n            return _this2.setState({\n              email: email\n            });\n          },\n          value: this.state.email,\n          style: styles.input\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(password) {\n            return _this2.setState({\n              password: password\n            });\n          },\n          value: this.state.password,\n          style: styles.input\n        }), _jsx(TouchableOpacity, {\n          style: styles.signupBtn,\n          onPress: function onPress() {\n            _this2.signup();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'black'\n            },\n            children: \"SIGN UP\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    margin: 5\n  },\n  signupBtn: {\n    alignItems: \"center\",\n    padding: 10,\n    backgroundColor: \"#7649fe\",\n    margin: 5,\n    borderWidth: 2\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/SignupScreen.js"],"names":["React","Component","Signup","props","signup","userData","first_name","state","last_name","email","password","ToastAndroid","show","SHORT","length","fetch","method","headers","body","JSON","stringify","then","response","status","responseJson","console","log","navigation","navigate","catch","error","setState","styles","input","signupBtn","color","StyleSheet","create","height","margin","borderWidth","padding","alignItems","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, TouchableOpacity, ScrollView, StyleSheet, TextInput, ToastAndroid } from 'react-native';\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n\n    signup = () => {\n        let userData = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        if (this.state.first_name === '' || this.state.last_name === '' || this.state.email === '' || this.state.password === '') {\n            ToastAndroid.show(\"Please fill in all fields\", ToastAndroid.SHORT)\n        } else if (this.state.password.length < 5) {\n            ToastAndroid.show(\"Password is too short\", ToastAndroid.SHORT)\n        }\n        else {\n            return fetch(\"http://10.0.2.2:3333/api/1.0.0/user\", {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userData)\n            })\n                .then((response) => {\n                    if (response.status === 201) {\n                        ToastAndroid.show(\"Account created successfully\", ToastAndroid.SHORT);\n                    } else if (response.status === 400) {\n                        throw 'Failed validation';\n                    } else if (response.status === 500) {\n                        throw 'Server error';\n                    } else {\n                        throw 'Something went wrong';\n                    }\n                })\n                .then((responseJson) => {\n                    console.log(\"User created with ID: \", responseJson);\n                    this.props.navigation.navigate(\"login\");\n                })\n                .catch((error) => {\n                    console.log(error);\n                })\n        }\n    }\n\n\n    render() {\n        return (\n            <ScrollView>\n                <TextInput\n                    placeholder='First Name'\n                    onChangeText={(first_name) => this.setState({ first_name })}\n                    value={this.state.first_name}\n                    style={styles.input}\n                />\n                <TextInput\n                    placeholder='Last Name'\n                    onChangeText={(last_name) => this.setState({ last_name })}\n                    value={this.state.last_name}\n                    style={styles.input}\n                />\n\n                <TextInput\n                    placeholder='Email'\n                    onChangeText={(email) => this.setState({ email })}\n                    value={this.state.email}\n                    style={styles.input}\n                />\n                <TextInput\n                    placeholder='Password'\n                    onChangeText={(password) => this.setState({ password })}\n                    value={this.state.password}\n                    style={styles.input}\n                />\n                <TouchableOpacity\n                    style={styles.signupBtn}\n                    onPress={() => { this.signup() }}\n                >\n                    <Text style={{ color: 'black' }}>SIGN UP</Text>\n                </TouchableOpacity>\n            </ScrollView>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n        margin: 5\n    },\n    signupBtn: {\n        alignItems: \"center\",\n        padding: 10,\n        backgroundColor: \"#7649fe\",\n        margin: 5,\n        borderWidth: 2\n    }\n});\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}