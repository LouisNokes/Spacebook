{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProfileScreen = function (_Component) {\n  _inherits(ProfileScreen, _Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileScreen);\n\n    _this = _super.call(this, props);\n\n    _this.viewPost = function (userId, postId) {\n      var navigation = _this.props.navigation;\n      navigation.navigate('viewPost', {\n        userId: userId,\n        postId: postId\n      });\n    };\n\n    _this.checkLoggedIn = function _callee() {\n      var navigation, value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              value = _context.sent;\n\n              if (value !== null) {\n                _this.setState({\n                  token: value\n                });\n              } else {\n                navigation.navigate('login');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.get_profile_image = function _callee2() {\n      var token, userId;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              userId = _context2.sent;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/photo\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (res) {\n                return res.blob();\n              }).then(function (resBlob) {\n                var data = URL.createObjectURL(resBlob);\n\n                _this.setState({\n                  photo: data,\n                  isLoading: false\n                });\n              }).catch(function (err) {\n                console.log('error', err);\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendPost = function _callee3() {\n      var navigation, userInput, token, userId, post;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              userInput = _this.state.userInput;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 4:\n              token = _context3.sent;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 7:\n              userId = _context3.sent;\n              post = {\n                text: userInput\n              };\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'X-Authorization': token\n                },\n                body: JSON.stringify(post)\n              }).then(function (response) {\n                if (response.status === 201) {\n                  _this.getPost();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPost = function _callee4() {\n      var navigation, token, userID;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 3:\n              token = _context4.sent;\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 6:\n              userID = _context4.sent;\n              return _context4.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + userID + \"/post\", {\n                method: 'GET',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).then(function (responseJson) {\n                _this.setState({\n                  listData: responseJson\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.deletePost = function _callee5(postId) {\n      var token, userId, navigation;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context5.sent;\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              userId = _context5.sent;\n              navigation = _this.props.navigation;\n              fetch(\"http://localhost:3333/api/1.0.0/user/\" + userId + \"/post/\" + postId, {\n                method: 'DELETE',\n                headers: {\n                  'X-Authorization': token\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  _this.getPost();\n                }\n\n                if (response.status === 400) {\n                  console.log('Bad Request');\n                } else if (response.status === 401) {\n                  navigation.navigate('login');\n                } else {\n                  throw 'Something went wrong';\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getProfileData = function _callee6() {\n      var token, uID, navigation;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@session_token'));\n\n            case 2:\n              token = _context6.sent;\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_id'));\n\n            case 5:\n              uID = _context6.sent;\n              navigation = _this.props.navigation;\n              return _context6.abrupt(\"return\", fetch(\"http://localhost:3333/api/1.0.0/user/\" + uID, {\n                method: 'get',\n                headers: {\n                  'X-Authorization': token,\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                if (response.status === 200) {\n                  return response.json();\n                }\n\n                if (response.status === 401) {\n                  navigation.navigate('login');\n                }\n\n                if (response.status === 404) {\n                  throw 'Not found';\n                } else {\n                  throw 'Something went wrong';\n                }\n              }).catch(function (error) {\n                console.log(error);\n                ToastAndroid.show(error, ToastAndroid.SHORT);\n              }).then(function (responseJson) {\n                console.log(responseJson);\n\n                _this.setState({\n                  userId: responseJson.user_id,\n                  firstName: responseJson.first_name,\n                  lastName: responseJson.last_name,\n                  friendCount: responseJson.friend_count\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      firstName: '',\n      lastName: '',\n      friendCount: '',\n      photo: null,\n      isLoading: true,\n      userId: '',\n      listData: '',\n      userInput: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe = this.props.navigation.addListener('focus', function () {\n        _this2.getPost();\n\n        _this2.getProfileData();\n\n        _this2.get_profile_image();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          friendCount = _this$state.friendCount,\n          listData = _this$state.listData,\n          userInput = _this$state.userInput,\n          photo = _this$state.photo;\n      var navigation = this.props.navigation;\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(ScrollView, {\n          style: styles.backgrd,\n          children: [_jsx(Image, {\n            source: photo,\n            style: styles.profileImg\n          }), _jsxs(Text, {\n            style: styles.txtName,\n            children: [firstName, \" \", lastName]\n          }), _jsx(TouchableOpacity, {\n            style: styles.editbtn,\n            onPress: function onPress() {\n              navigation.navigate('edit');\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Upload Picture\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.editbtn,\n            onPress: function onPress() {\n              navigation.navigate();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Drafts\"\n            })\n          }), _jsxs(Text, {\n            style: styles.txt,\n            children: [\"Friends: \", friendCount]\n          }), _jsx(TextInput, {\n            placeholder: \"Whats on your mind...\",\n            onChangeText: function onChangeText(userInput) {\n              return _this3.setState({\n                userInput: userInput\n              });\n            },\n            value: userInput,\n            style: styles.input\n          }), _jsx(TouchableOpacity, {\n            style: styles.editbtn,\n            onPress: function onPress() {\n              _this3.sendPost();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Post\"\n            })\n          }), _jsx(FlatList, {\n            data: listData,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(View, {\n                style: styles.postContainer,\n                children: [_jsx(Image, {\n                  style: styles.profileImgCont,\n                  source: photo\n                }), _jsxs(Text, {\n                  style: styles.nameTxt,\n                  children: [item.author.first_name, \" \", item.author.last_name]\n                }), _jsxs(Text, {\n                  style: styles.contentSection,\n                  children: [\" \", item.text, \" \"]\n                }), _jsxs(View, {\n                  style: styles.rightButtons,\n                  children: [_jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"edit\",\n                      size: 15,\n                      color: \"white\"\n                    })\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"eye\",\n                      size: 15,\n                      color: \"white\"\n                    }),\n                    onPress: function onPress() {\n                      navigation.navigate('viewPost', {\n                        postID: item.post_id\n                      });\n                    }\n                  }), _jsx(Button, {\n                    icon: _jsx(Icon, {\n                      name: \"trash\",\n                      size: 15,\n                      color: \"red\"\n                    }),\n                    onPress: function onPress() {\n                      _this3.deletePost(item.post_id);\n                    }\n                  })]\n                })]\n              });\n            }\n          })]\n        })\n      });\n    }\n  }]);\n\n  return ProfileScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998'\n  },\n  profileImg: {\n    width: 100,\n    height: 100,\n    borderRadius: 80,\n    borderColor: 'black',\n    borderWidth: 1,\n    margin: 20\n  },\n  txt: {\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2\n  },\n  txtName: {\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 20\n  },\n  editbtn: {\n    alignItems: 'center',\n    backgroundColor: '#8b9dc3',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 2\n  },\n  backgrd: {\n    backgroundColor: '#3b5998'\n  },\n  buttonContainer: {\n    flexDirection: 'row'\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 300\n  },\n  profileImgCont: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30\n  },\n  position: {\n    bottom: 200\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: 'white'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/Users/louis/Desktop/Spacebook/screens/profileScreen.js"],"names":["AsyncStorage","React","Component","Icon","Button","ProfileScreen","props","viewPost","userId","postId","navigation","navigate","checkLoggedIn","getItem","value","setState","token","get_profile_image","fetch","method","headers","then","res","blob","resBlob","data","URL","createObjectURL","photo","isLoading","catch","err","console","log","sendPost","userInput","state","post","text","body","JSON","stringify","response","status","getPost","userID","json","responseJson","listData","error","deletePost","getProfileData","uID","ToastAndroid","show","SHORT","user_id","firstName","first_name","lastName","last_name","friendCount","friend_count","unsubscribe","addListener","styles","centeredView","backgrd","profileImg","txtName","editbtn","color","txt","input","item","postContainer","profileImgCont","nameTxt","author","contentSection","rightButtons","postID","post_id","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","width","height","borderRadius","borderColor","borderWidth","margin","fontWeight","fontSize","padding","buttonContainer","flexDirection","marginTop","marginLeft","resizeMode","alignSelf","position","bottom","textAlign","textDecorationLine","button","elevation","textStyle","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable react/no-unused-class-component-methods */\n/* eslint-disable react/no-unused-state */\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  ToastAndroid,\n  Alert,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  FlatList,\n} from 'react-native';\nimport { ScrollView, TextInput } from 'react-native-web';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Button } from 'react-native-elements';\n\nclass ProfileScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      friendCount: '',\n      photo: null,\n      isLoading: true,\n      userId: '',\n      listData: '',\n      userInput: '',\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.props.navigation.addListener('focus', () => {\n      this.getPost();\n      this.getProfileData();\n      this.get_profile_image();\n    });\n  }\n\n  viewPost = (userId, postId) => {\n    const { navigation } = this.props;\n    navigation.navigate('viewPost', {\n      userId: userId,\n      postId: postId,\n    });\n  };\n\n  checkLoggedIn = async () => {\n    const { navigation } = this.props;\n    const value = await AsyncStorage.getItem('@session_token');\n    if (value !== null) {\n      this.setState({ token: value });\n    } else {\n      navigation.navigate('login');\n    }\n  };\n\n  get_profile_image = async () => {\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/photo`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((res) => res.blob())\n      .then((resBlob) => {\n        let data = URL.createObjectURL(resBlob);\n        this.setState({\n          photo: data,\n          isLoading: false,\n        });\n      })\n      .catch((err) => {\n        console.log('error', err);\n      });\n  };\n\n  sendPost = async () => {\n    const { navigation } = this.props;\n    const { userInput } = this.state;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    const post = { text: userInput };\n\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/post`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Authorization': token,\n      },\n\n      body: JSON.stringify(post),\n    }).then((response) => {\n      if (response.status === 201) {\n        this.getPost();\n      }\n      if (response.status === 400) {\n        console.log('Bad Request');\n      } else if (response.status === 401) {\n        navigation.navigate('login');\n      } else {\n        throw 'Something went wrong';\n      }\n    });\n  };\n\n  getPost = async () => {\n    const { navigation } = this.props;\n    const token = await AsyncStorage.getItem('@session_token');\n    const userID = await AsyncStorage.getItem('@user_id');\n    return fetch(`http://localhost:3333/api/1.0.0/user/${userID}/post`, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 400) {\n          console.log('Bad Request');\n        } else if (response.status === 401) {\n          navigation.navigate('login');\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .then((responseJson) => {\n        this.setState({\n          listData: responseJson,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  deletePost = async (postId) => {\n    const token = await AsyncStorage.getItem('@session_token');\n    const userId = await AsyncStorage.getItem('@user_id');\n    const { navigation } = this.props;\n    fetch(`http://localhost:3333/api/1.0.0/user/${userId}/post/${postId}`, {\n      method: 'DELETE',\n      headers: {\n        'X-Authorization': token,\n      },\n    }).then((response) => {\n      if (response.status === 200) {\n        this.getPost();\n      }\n      if (response.status === 400) {\n        console.log('Bad Request');\n      } else if (response.status === 401) {\n        navigation.navigate('login');\n      } else {\n        throw 'Something went wrong';\n      }\n    });\n  };\n\n  getProfileData = async () => {\n    const token = await AsyncStorage.getItem('@session_token');\n    const uID = await AsyncStorage.getItem('@user_id');\n    const { navigation } = this.props;\n    return fetch(`http://localhost:3333/api/1.0.0/user/${uID}`, {\n      method: 'get',\n      headers: {\n        'X-Authorization': token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return response.json();\n        }\n        if (response.status === 401) {\n          navigation.navigate('login');\n        }\n        if (response.status === 404) {\n          throw 'Not found';\n        } else {\n          throw 'Something went wrong';\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        ToastAndroid.show(error, ToastAndroid.SHORT);\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n        this.setState({\n          userId: responseJson.user_id,\n          firstName: responseJson.first_name,\n          lastName: responseJson.last_name,\n          friendCount: responseJson.friend_count,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { firstName, lastName, friendCount, listData, userInput, photo } =\n      this.state;\n    const { navigation } = this.props;\n    return (\n      <View style={styles.centeredView}>\n        <ScrollView style={styles.backgrd}>\n          <Image source={photo} style={styles.profileImg} />\n\n          <Text style={styles.txtName}>\n            {firstName} {lastName}\n          </Text>\n\n          <TouchableOpacity\n            style={styles.editbtn}\n            onPress={() => {\n              navigation.navigate('edit'); // Nav to edit page\n            }}\n          >\n            <Text style={{ color: 'white' }}>Upload Picture</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.editbtn}\n            onPress={() => {\n              navigation.navigate(); // Nav to draft page\n            }}\n          >\n            <Text style={{ color: 'white' }}>Drafts</Text>\n          </TouchableOpacity>\n          <Text style={styles.txt}>Friends: {friendCount}</Text>\n          <TextInput\n            placeholder=\"Whats on your mind...\"\n            onChangeText={(userInput) => this.setState({ userInput })}\n            value={userInput}\n            style={styles.input}\n          />\n          <TouchableOpacity\n            style={styles.editbtn}\n            onPress={() => {\n              this.sendPost(); // Nav to edit page\n            }}\n          >\n            <Text style={{ color: 'white' }}>Post</Text>\n          </TouchableOpacity>\n          <FlatList\n            data={listData}\n            renderItem={({ item }) => (\n              <View style={styles.postContainer}>\n                <Image style={styles.profileImgCont} source={photo} />\n                <Text style={styles.nameTxt}>\n                  {item.author.first_name} {item.author.last_name}\n                </Text>\n                <Text style={styles.contentSection}> {item.text} </Text>\n                <View style={styles.rightButtons}>\n                  <Button icon={<Icon name=\"edit\" size={15} color=\"white\" />} />\n                  <Button\n                    icon={<Icon name=\"eye\" size={15} color=\"white\" />}\n                    onPress={() => {\n                      navigation.navigate('viewPost', {\n                        postID: item.post_id,\n                      });\n                    }}\n                  />\n                  <Button\n                    icon={<Icon name=\"trash\" size={15} color=\"red\" />}\n                    onPress={() => {\n                      this.deletePost(item.post_id);\n                    }}\n                  />\n                </View>\n              </View>\n            )}\n          />\n        </ScrollView>\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#3b5998',\n  },\n  profileImg: {\n    width: 100,\n    height: 100,\n    borderRadius: 80,\n    borderColor: 'black',\n    borderWidth: 1,\n    margin: 20,\n  },\n  txt: {\n    fontWeight: 'bold',\n    color: 'black',\n    margin: 2,\n  },\n  txtName: {\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 20,\n  },\n  editbtn: {\n    alignItems: 'center',\n    backgroundColor: '#8b9dc3',\n    borderRadius: 10,\n    padding: 10,\n    margin: 5,\n    borderWidth: 2,\n  },\n  backgrd: {\n    backgroundColor: '#3b5998',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n  },\n  postContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    height: 300,\n    width: 400,\n    marginTop: 30,\n    borderWidth: 2,\n  },\n  rightButtons: {\n    flexDirection: 'row',\n    marginLeft: 300,\n  },\n  profileImgCont: {\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    height: 30,\n    width: 30,\n  },\n  position: {\n    bottom: 200,\n  },\n  nameTxt: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textDecorationLine: 'underline',\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    margin: 5,\n    width: 170,\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  contentSection: {\n    marginTop: 10,\n    marginBottom: 15,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n});\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}